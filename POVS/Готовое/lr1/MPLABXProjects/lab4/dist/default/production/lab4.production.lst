

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Nov 30 19:26:32 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x4E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0006                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  0081                     	;# 
    24  0085                     	;# 
    25  0086                     	;# 
    26  0088                     	;# 
    27  0089                     	;# 
    28  0005                     _PORTA	set	5
    29  0006                     _PORTB	set	6
    30  0085                     _TRISA	set	133
    31  0086                     _TRISB	set	134
    32                           
    33                           	psect	strings
    34  0001                     __pstrings:	
    35  0001                     stringtab:	
    36  0001                     __stringtab:	
    37  0001                     stringcode:	
    38                           ;	String table - string pointers are 1 byte each
    39                           
    40  0001                     stringdir:	
    41  0001  3000               	movlw	high stringdir
    42  0002  008A               	movwf	10
    43  0003  0804               	movf	4,w
    44  0004  0A84               	incf	4,f
    45  0005  0782               	addwf	2,f
    46  0006                     __stringbase:	
    47  0006  3400               	retlw	0
    48  0007                     __end_of__stringtab:	
    49  0007                     STR_1:	
    50  0007  3431               	retlw	49	;'1'
    51  0008  3431               	retlw	49	;'1'
    52  0009  3431               	retlw	49	;'1'
    53  000A  3431               	retlw	49	;'1'
    54  000B  3400               	retlw	0
    55  000C                     STR_2:	
    56  000C  3432               	retlw	50	;'2'
    57  000D  3432               	retlw	50	;'2'
    58  000E  3432               	retlw	50	;'2'
    59  000F  3432               	retlw	50	;'2'
    60  0010  3400               	retlw	0
    61  0011                     STR_3:	
    62  0011  3433               	retlw	51	;'3'
    63  0012  3433               	retlw	51	;'3'
    64  0013  3433               	retlw	51	;'3'
    65  0014  3433               	retlw	51	;'3'
    66  0015  3400               	retlw	0
    67  0016                     STR_4:	
    68  0016  3434               	retlw	52	;'4'
    69  0017  3434               	retlw	52	;'4'
    70  0018  3434               	retlw	52	;'4'
    71  0019  3434               	retlw	52	;'4'
    72  001A  3400               	retlw	0
    73  0007                     
    74                           	psect	cinit
    75  03FA                     start_initialization:	
    76                           ; #config settings
    77                           
    78  03FA                     __initialization:	
    79                           
    80                           ; Clear objects allocated to BANK0
    81  03FA  019D               	clrf	__pbssBANK0& (0+127)
    82  03FB  019E               	clrf	(__pbssBANK0+1)& (0+127)
    83  03FC  019F               	clrf	(__pbssBANK0+2)& (0+127)
    84  03FD  01A0               	clrf	(__pbssBANK0+3)& (0+127)
    85  03FE                     end_of_initialization:	
    86                           ;End of C runtime variable initialization code
    87                           
    88  03FE                     __end_of__initialization:	
    89  03FE  0183               	clrf	3
    90  03FF  2AD3               	ljmp	_main	;jump to C main() function
    91                           
    92                           	psect	bssBANK0
    93  001D                     __pbssBANK0:	
    94  001D                     main@F579:	
    95  001D                     	ds	4
    96                           
    97                           	psect	cstackBANK0
    98  000C                     __pcstackBANK0:	
    99  000C                     ?_CaptureKey:	
   100  000C                     ??_CaptureKey:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  000C                     ?_main:	
   104                           ; 1 bytes @ 0x0
   105                           
   106  000C                     ?_strncmp:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  000C                     strncmp@s2:	
   110                           ; 2 bytes @ 0x0
   111                           
   112                           
   113                           ; 1 bytes @ 0x0
   114  000C                     	ds	1
   115  000D                     strncmp@len:	
   116                           
   117                           ; 2 bytes @ 0x1
   118  000D                     	ds	2
   119  000F                     ??_strncmp:	
   120                           
   121                           ; 1 bytes @ 0x3
   122  000F                     	ds	2
   123  0011                     strncmp@s1:	
   124                           
   125                           ; 1 bytes @ 0x5
   126  0011                     	ds	1
   127  0012                     ??_main:	
   128                           
   129                           ; 1 bytes @ 0x6
   130  0012                     	ds	2
   131  0014                     main@data:	
   132                           
   133                           ; 4 bytes @ 0x8
   134  0014                     	ds	4
   135  0018                     main@psw_entry_enabled:	
   136                           
   137                           ; 1 bytes @ 0xC
   138  0018                     	ds	1
   139  0019                     main@usr_entry_succeed:	
   140                           
   141                           ; 1 bytes @ 0xD
   142  0019                     	ds	1
   143  001A                     main@usr_entry_enabled:	
   144                           
   145                           ; 1 bytes @ 0xE
   146  001A                     	ds	1
   147  001B                     main@position:	
   148                           
   149                           ; 1 bytes @ 0xF
   150  001B                     	ds	1
   151  001C                     main@temp:	
   152                           
   153                           ; 1 bytes @ 0x10
   154  001C                     	ds	1
   155                           
   156                           	psect	maintext
   157  02D3                     __pmaintext:	
   158 ;;
   159 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   160 ;;
   161 ;; *************** function _main *****************
   162 ;; Defined at:
   163 ;;		line 78 in file "newmain.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;  temp            1   16[BANK0 ] unsigned char 
   168 ;;  data            4    8[BANK0 ] unsigned char [4]
   169 ;;  position        1   15[BANK0 ] unsigned char 
   170 ;;  usr_entry_en    1   14[BANK0 ] unsigned char 
   171 ;;  usr_entry_su    1   13[BANK0 ] unsigned char 
   172 ;;  psw_entry_en    1   12[BANK0 ] unsigned char 
   173 ;; Return value:  Size  Location     Type
   174 ;;                  1    wreg      void 
   175 ;; Registers used:
   176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   177 ;; Tracked objects:
   178 ;;		On entry : B00/0
   179 ;;		On exit  : 0/0
   180 ;;		Unchanged: 0/0
   181 ;; Data sizes:     COMMON   BANK0
   182 ;;      Params:         0       0
   183 ;;      Locals:         0       9
   184 ;;      Temps:          0       2
   185 ;;      Totals:         0      11
   186 ;;Total ram usage:       11 bytes
   187 ;; Hardware stack levels required when called:    2
   188 ;; This function calls:
   189 ;;		_CaptureKey
   190 ;;		_strncmp
   191 ;; This function is called by:
   192 ;;		Startup code after reset
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           
   197                           ;psect for function _main
   198  02D3                     _main:	
   199                           
   200                           ;newmain.c: 80: TRISA = 0xE0;
   201                           
   202                           ;incstack = 0
   203                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   204  02D3  30E0               	movlw	224
   205  02D4  1683               	bsf	3,5	;RP0=1, select bank1
   206  02D5  0085               	movwf	5	;volatile
   207                           
   208                           ;newmain.c: 81: TRISB = 0xF8;
   209  02D6  30F8               	movlw	248
   210  02D7  0086               	movwf	6	;volatile
   211                           
   212                           ;newmain.c: 82: PORTA = 0x0F;
   213  02D8  300F               	movlw	15
   214  02D9  1283               	bcf	3,5	;RP0=0, select bank0
   215  02DA  0085               	movwf	5	;volatile
   216                           
   217                           ;newmain.c: 83: PORTB = 0x07;
   218  02DB  3007               	movlw	7
   219  02DC  0086               	movwf	6	;volatile
   220                           
   221                           ;newmain.c: 84: uint8_t data[4] = {0x00, 0x00, 0x00, 0x00};
   222  02DD  0820               	movf	main@F579+3,w
   223  02DE  0097               	movwf	main@data+3
   224  02DF  081F               	movf	main@F579+2,w
   225  02E0  0096               	movwf	main@data+2
   226  02E1  081E               	movf	main@F579+1,w
   227  02E2  0095               	movwf	main@data+1
   228  02E3  081D               	movf	main@F579,w
   229  02E4  0094               	movwf	main@data
   230                           
   231                           ;newmain.c: 85: uint8_t position = 0;
   232  02E5  019B               	clrf	main@position
   233                           
   234                           ;newmain.c: 86: bool usr_entry_enabled = 0;
   235  02E6  019A               	clrf	main@usr_entry_enabled
   236                           
   237                           ;newmain.c: 87: bool usr_entry_succeed = 0;
   238  02E7  0199               	clrf	main@usr_entry_succeed
   239  02E8                     L1:	
   240                           
   241                           ;newmain.c: 88: bool psw_entry_enabled = 0;
   242  02E8  0198               	clrf	main@psw_entry_enabled
   243  02E9                     l934:	
   244                           ;newmain.c: 90: while(1)
   245                           
   246                           
   247                           ;newmain.c: 91: {
   248                           ;newmain.c: 92: uint8_t temp = CaptureKey();
   249  02E9  2252               	fcall	_CaptureKey
   250  02EA  1283               	bcf	3,5	;RP0=0, select bank0
   251  02EB  0092               	movwf	??_main
   252  02EC  0812               	movf	??_main,w
   253  02ED  009C               	movwf	main@temp
   254                           
   255                           ;newmain.c: 93: if((temp == '*')&&(!usr_entry_enabled)&&(!usr_entry_succeed)&&(!psw_entr
      +                          y_enabled)){
   256  02EE  302A               	movlw	42
   257  02EF  061C               	xorwf	main@temp,w
   258  02F0  1D03               	btfss	3,2
   259  02F1  2B01               	goto	l948
   260  02F2  081A               	movf	main@usr_entry_enabled,w
   261  02F3  1D03               	btfss	3,2
   262  02F4  2B01               	goto	l948
   263  02F5  0819               	movf	main@usr_entry_succeed,w
   264  02F6  1D03               	btfss	3,2
   265  02F7  2B01               	goto	l948
   266  02F8  0818               	movf	main@psw_entry_enabled,w
   267  02F9  1D03               	btfss	3,2
   268  02FA  2B01               	goto	l948
   269                           
   270                           ;newmain.c: 94: usr_entry_enabled = 1;
   271  02FB  019A               	clrf	main@usr_entry_enabled
   272  02FC  0A9A               	incf	main@usr_entry_enabled,f
   273                           
   274                           ;newmain.c: 95: temp = 0xAA;
   275  02FD  30AA               	movlw	170
   276  02FE  0092               	movwf	??_main
   277  02FF  0812               	movf	??_main,w
   278  0300  009C               	movwf	main@temp
   279  0301                     l948:	
   280                           
   281                           ;newmain.c: 97: }
   282                           ;newmain.c: 98: if(usr_entry_succeed &&(temp == '#')){
   283  0301  0819               	movf	main@usr_entry_succeed,w
   284  0302  1903               	btfsc	3,2
   285  0303  2B10               	goto	l958
   286  0304  3023               	movlw	35
   287  0305  061C               	xorwf	main@temp,w
   288  0306  1D03               	btfss	3,2
   289  0307  2B10               	goto	l958
   290                           
   291                           ;newmain.c: 99: usr_entry_succeed = 0;
   292  0308  0199               	clrf	main@usr_entry_succeed
   293                           
   294                           ;newmain.c: 100: psw_entry_enabled = 1;
   295  0309  0198               	clrf	main@psw_entry_enabled
   296  030A  0A98               	incf	main@psw_entry_enabled,f
   297                           
   298                           ;newmain.c: 101: temp = 0xAA;
   299  030B  30AA               	movlw	170
   300  030C  0092               	movwf	??_main
   301  030D  0812               	movf	??_main,w
   302  030E  009C               	movwf	main@temp
   303                           
   304                           ;newmain.c: 103: } else if(temp == '#'){
   305  030F  2B23               	goto	l968
   306  0310                     l958:	
   307  0310  3023               	movlw	35
   308  0311  061C               	xorwf	main@temp,w
   309  0312  1D03               	btfss	3,2
   310  0313  2B23               	goto	l968
   311                           
   312                           ;newmain.c: 104: usr_entry_enabled = 0;
   313  0314  019A               	clrf	main@usr_entry_enabled
   314                           
   315                           ;newmain.c: 105: usr_entry_succeed = 0;
   316  0315  0199               	clrf	main@usr_entry_succeed
   317                           
   318                           ;newmain.c: 106: PORTA = 0x0E;
   319  0316  300E               	movlw	14
   320  0317  0085               	movwf	5	;volatile
   321                           
   322                           ;newmain.c: 107: _delay((unsigned long)((500)*(1000000/4000.0)));
   323  0318  30A3               	movlw	163
   324  0319  0093               	movwf	??_main+1
   325  031A  3055               	movlw	85
   326  031B  0092               	movwf	??_main
   327  031C                     u737:	
   328  031C  0B92               	decfsz	??_main,f
   329  031D  2B1C               	goto	u737
   330  031E  0B93               	decfsz	??_main+1,f
   331  031F  2B1C               	goto	u737
   332                           
   333                           ;newmain.c: 108: PORTA = 0x0F;
   334  0320  300F               	movlw	15
   335  0321  1283               	bcf	3,5	;RP0=0, select bank0
   336  0322  0085               	movwf	5	;volatile
   337  0323                     l968:	
   338                           
   339                           ;newmain.c: 109: }
   340                           ;newmain.c: 110: if(usr_entry_enabled){
   341  0323  081A               	movf	main@usr_entry_enabled,w
   342  0324  1903               	btfsc	3,2
   343  0325  2B8A               	goto	l996
   344                           
   345                           ;newmain.c: 111: if(position < 4){
   346  0326  3004               	movlw	4
   347  0327  021B               	subwf	main@position,w
   348  0328  1803               	skipnc
   349  0329  2B3B               	goto	l978
   350                           
   351                           ;newmain.c: 112: if(temp != 0xAA){
   352  032A  30AA               	movlw	170
   353  032B  061C               	xorwf	main@temp,w
   354  032C  1903               	btfsc	3,2
   355  032D  2B8A               	goto	l996
   356                           
   357                           ;newmain.c: 113: data[position++] = temp;
   358  032E  081C               	movf	main@temp,w
   359  032F  0092               	movwf	??_main
   360  0330  081B               	movf	main@position,w
   361  0331  3E14               	addlw	(low (main@data| 0))& (0+255)
   362  0332  0084               	movwf	4
   363  0333  0812               	movf	??_main,w
   364  0334  1383               	bcf	3,7	;select IRP bank0
   365  0335  0080               	movwf	0
   366  0336  3001               	movlw	1
   367  0337  0092               	movwf	??_main
   368  0338  0812               	movf	??_main,w
   369  0339  079B               	addwf	main@position,f
   370                           
   371                           ;newmain.c: 114: }
   372                           ;newmain.c: 115: }
   373  033A  2B8A               	goto	l996
   374  033B                     l978:	
   375                           
   376                           ;newmain.c: 116: else{
   377                           ;newmain.c: 117: position = 0;
   378  033B  019B               	clrf	main@position
   379                           
   380                           ;newmain.c: 118: if((!strncmp(data, "1111", 4))||(!strncmp(data, "2222", 4))||(!strncmp(
      +                          data, "3333", 4))||(!strncmp(data, "4444", 4))){
   381  033C  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   382  033D  0092               	movwf	??_main
   383  033E  0812               	movf	??_main,w
   384  033F  008C               	movwf	strncmp@s2
   385  0340  3004               	movlw	4
   386  0341  008D               	movwf	strncmp@len
   387  0342  3000               	movlw	0
   388  0343  008E               	movwf	strncmp@len+1
   389  0344  3014               	movlw	(low (main@data| 0))& (0+255)
   390  0345  2215               	fcall	_strncmp
   391  0346  1283               	bcf	3,5	;RP0=0, select bank0
   392  0347  080C               	movf	?_strncmp,w
   393  0348  040D               	iorwf	?_strncmp+1,w
   394  0349  1903               	btfsc	3,2
   395  034A  2B78               	goto	l988
   396  034B  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   397  034C  0092               	movwf	??_main
   398  034D  0812               	movf	??_main,w
   399  034E  008C               	movwf	strncmp@s2
   400  034F  3004               	movlw	4
   401  0350  008D               	movwf	strncmp@len
   402  0351  3000               	movlw	0
   403  0352  008E               	movwf	strncmp@len+1
   404  0353  3014               	movlw	(low (main@data| 0))& (0+255)
   405  0354  2215               	fcall	_strncmp
   406  0355  1283               	bcf	3,5	;RP0=0, select bank0
   407  0356  080C               	movf	?_strncmp,w
   408  0357  040D               	iorwf	?_strncmp+1,w
   409  0358  1903               	btfsc	3,2
   410  0359  2B78               	goto	l988
   411  035A  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   412  035B  0092               	movwf	??_main
   413  035C  0812               	movf	??_main,w
   414  035D  008C               	movwf	strncmp@s2
   415  035E  3004               	movlw	4
   416  035F  008D               	movwf	strncmp@len
   417  0360  3000               	movlw	0
   418  0361  008E               	movwf	strncmp@len+1
   419  0362  3014               	movlw	(low (main@data| 0))& (0+255)
   420  0363  2215               	fcall	_strncmp
   421  0364  1283               	bcf	3,5	;RP0=0, select bank0
   422  0365  080C               	movf	?_strncmp,w
   423  0366  040D               	iorwf	?_strncmp+1,w
   424  0367  1903               	btfsc	3,2
   425  0368  2B78               	goto	l988
   426  0369  3010               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   427  036A  0092               	movwf	??_main
   428  036B  0812               	movf	??_main,w
   429  036C  008C               	movwf	strncmp@s2
   430  036D  3004               	movlw	4
   431  036E  008D               	movwf	strncmp@len
   432  036F  3000               	movlw	0
   433  0370  008E               	movwf	strncmp@len+1
   434  0371  3014               	movlw	(low (main@data| 0))& (0+255)
   435  0372  2215               	fcall	_strncmp
   436  0373  1283               	bcf	3,5	;RP0=0, select bank0
   437  0374  080C               	movf	?_strncmp,w
   438  0375  040D               	iorwf	?_strncmp+1,w
   439  0376  1D03               	btfss	3,2
   440  0377  2B7C               	goto	l992
   441  0378                     l988:	
   442                           
   443                           ;newmain.c: 119: usr_entry_enabled = 0;
   444  0378  019A               	clrf	main@usr_entry_enabled
   445                           
   446                           ;newmain.c: 120: usr_entry_succeed = 1;
   447  0379  0199               	clrf	main@usr_entry_succeed
   448  037A  0A99               	incf	main@usr_entry_succeed,f
   449                           
   450                           ;newmain.c: 122: }else{
   451  037B  2B8A               	goto	l996
   452  037C                     l992:	
   453                           
   454                           ;newmain.c: 123: PORTA = 0x0E;
   455  037C  300E               	movlw	14
   456  037D  0085               	movwf	5	;volatile
   457                           
   458                           ;newmain.c: 124: _delay((unsigned long)((500)*(1000000/4000.0)));
   459  037E  30A3               	movlw	163
   460  037F  0093               	movwf	??_main+1
   461  0380  3055               	movlw	85
   462  0381  0092               	movwf	??_main
   463  0382                     u747:	
   464  0382  0B92               	decfsz	??_main,f
   465  0383  2B82               	goto	u747
   466  0384  0B93               	decfsz	??_main+1,f
   467  0385  2B82               	goto	u747
   468                           
   469                           ;newmain.c: 125: PORTA = 0x0F;
   470  0386  300F               	movlw	15
   471  0387  1283               	bcf	3,5	;RP0=0, select bank0
   472  0388  0085               	movwf	5	;volatile
   473                           
   474                           ;newmain.c: 126: usr_entry_enabled = 0;
   475  0389  019A               	clrf	main@usr_entry_enabled
   476  038A                     l996:	
   477                           
   478                           ;newmain.c: 127: }
   479                           ;newmain.c: 128: }
   480                           ;newmain.c: 129: }
   481                           ;newmain.c: 130: if(psw_entry_enabled){
   482  038A  0818               	movf	main@psw_entry_enabled,w
   483  038B  1903               	btfsc	3,2
   484  038C  2AE9               	goto	l934
   485                           
   486                           ;newmain.c: 131: if(position < 4){
   487  038D  3004               	movlw	4
   488  038E  021B               	subwf	main@position,w
   489  038F  1803               	skipnc
   490  0390  2BA2               	goto	l1006
   491                           
   492                           ;newmain.c: 132: if(temp != 0xAA){
   493  0391  30AA               	movlw	170
   494  0392  061C               	xorwf	main@temp,w
   495  0393  1903               	btfsc	3,2
   496  0394  2AE9               	goto	l934
   497                           
   498                           ;newmain.c: 133: data[position++] = temp;
   499  0395  081C               	movf	main@temp,w
   500  0396  0092               	movwf	??_main
   501  0397  081B               	movf	main@position,w
   502  0398  3E14               	addlw	(low (main@data| 0))& (0+255)
   503  0399  0084               	movwf	4
   504  039A  0812               	movf	??_main,w
   505  039B  1383               	bcf	3,7	;select IRP bank0
   506  039C  0080               	movwf	0
   507  039D  3001               	movlw	1
   508  039E  0092               	movwf	??_main
   509  039F  0812               	movf	??_main,w
   510  03A0  079B               	addwf	main@position,f
   511                           
   512                           ;newmain.c: 134: }
   513                           ;newmain.c: 135: }
   514  03A1  2AE9               	goto	l934
   515  03A2                     l1006:	
   516                           
   517                           ;newmain.c: 136: else{
   518                           ;newmain.c: 137: position = 0;
   519  03A2  019B               	clrf	main@position
   520                           
   521                           ;newmain.c: 138: if((!strncmp(data, "1111", 4))||(!strncmp(data, "2222", 4))||(!strncmp(
      +                          data, "3333", 4))||(!strncmp(data, "4444", 4))){
   522  03A3  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   523  03A4  0092               	movwf	??_main
   524  03A5  0812               	movf	??_main,w
   525  03A6  008C               	movwf	strncmp@s2
   526  03A7  3004               	movlw	4
   527  03A8  008D               	movwf	strncmp@len
   528  03A9  3000               	movlw	0
   529  03AA  008E               	movwf	strncmp@len+1
   530  03AB  3014               	movlw	(low (main@data| 0))& (0+255)
   531  03AC  2215               	fcall	_strncmp
   532  03AD  1283               	bcf	3,5	;RP0=0, select bank0
   533  03AE  080C               	movf	?_strncmp,w
   534  03AF  040D               	iorwf	?_strncmp+1,w
   535  03B0  1903               	btfsc	3,2
   536  03B1  2BDF               	goto	l1016
   537  03B2  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   538  03B3  0092               	movwf	??_main
   539  03B4  0812               	movf	??_main,w
   540  03B5  008C               	movwf	strncmp@s2
   541  03B6  3004               	movlw	4
   542  03B7  008D               	movwf	strncmp@len
   543  03B8  3000               	movlw	0
   544  03B9  008E               	movwf	strncmp@len+1
   545  03BA  3014               	movlw	(low (main@data| 0))& (0+255)
   546  03BB  2215               	fcall	_strncmp
   547  03BC  1283               	bcf	3,5	;RP0=0, select bank0
   548  03BD  080C               	movf	?_strncmp,w
   549  03BE  040D               	iorwf	?_strncmp+1,w
   550  03BF  1903               	btfsc	3,2
   551  03C0  2BDF               	goto	l1016
   552  03C1  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   553  03C2  0092               	movwf	??_main
   554  03C3  0812               	movf	??_main,w
   555  03C4  008C               	movwf	strncmp@s2
   556  03C5  3004               	movlw	4
   557  03C6  008D               	movwf	strncmp@len
   558  03C7  3000               	movlw	0
   559  03C8  008E               	movwf	strncmp@len+1
   560  03C9  3014               	movlw	(low (main@data| 0))& (0+255)
   561  03CA  2215               	fcall	_strncmp
   562  03CB  1283               	bcf	3,5	;RP0=0, select bank0
   563  03CC  080C               	movf	?_strncmp,w
   564  03CD  040D               	iorwf	?_strncmp+1,w
   565  03CE  1903               	btfsc	3,2
   566  03CF  2BDF               	goto	l1016
   567  03D0  3010               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   568  03D1  0092               	movwf	??_main
   569  03D2  0812               	movf	??_main,w
   570  03D3  008C               	movwf	strncmp@s2
   571  03D4  3004               	movlw	4
   572  03D5  008D               	movwf	strncmp@len
   573  03D6  3000               	movlw	0
   574  03D7  008E               	movwf	strncmp@len+1
   575  03D8  3014               	movlw	(low (main@data| 0))& (0+255)
   576  03D9  2215               	fcall	_strncmp
   577  03DA  1283               	bcf	3,5	;RP0=0, select bank0
   578  03DB  080C               	movf	?_strncmp,w
   579  03DC  040D               	iorwf	?_strncmp+1,w
   580  03DD  1D03               	btfss	3,2
   581  03DE  2BEC               	goto	l1022
   582  03DF                     l1016:	
   583                           
   584                           ;newmain.c: 139: PORTA = 0x00;
   585  03DF  0185               	clrf	5	;volatile
   586                           
   587                           ;newmain.c: 140: _delay((unsigned long)((500)*(1000000/4000.0)));
   588  03E0  30A3               	movlw	163
   589  03E1  0093               	movwf	??_main+1
   590  03E2  3055               	movlw	85
   591  03E3  0092               	movwf	??_main
   592  03E4                     u757:	
   593  03E4  0B92               	decfsz	??_main,f
   594  03E5  2BE4               	goto	u757
   595  03E6  0B93               	decfsz	??_main+1,f
   596  03E7  2BE4               	goto	u757
   597                           
   598                           ;newmain.c: 141: PORTA = 0x0F;
   599  03E8  300F               	movlw	15
   600  03E9  1283               	bcf	3,5	;RP0=0, select bank0
   601  03EA  0085               	movwf	5	;volatile
   602                           
   603                           ;newmain.c: 142: }else{
   604  03EB  2AE9               	goto	l934
   605  03EC                     l1022:	
   606                           
   607                           ;newmain.c: 143: PORTA = 0x0E;
   608  03EC  300E               	movlw	14
   609  03ED  0085               	movwf	5	;volatile
   610                           
   611                           ;newmain.c: 144: _delay((unsigned long)((500)*(1000000/4000.0)));
   612  03EE  30A3               	movlw	163
   613  03EF  0093               	movwf	??_main+1
   614  03F0  3055               	movlw	85
   615  03F1  0092               	movwf	??_main
   616  03F2                     u767:	
   617  03F2  0B92               	decfsz	??_main,f
   618  03F3  2BF2               	goto	u767
   619  03F4  0B93               	decfsz	??_main+1,f
   620  03F5  2BF2               	goto	u767
   621                           
   622                           ;newmain.c: 145: PORTA = 0xF;
   623  03F6  300F               	movlw	15
   624  03F7  1283               	bcf	3,5	;RP0=0, select bank0
   625  03F8  0085               	movwf	5	;volatile
   626  03F9  2AE8               	goto	L1
   627  03FA                     __end_of_main:	
   628                           ;newmain.c: 146: psw_entry_enabled = 0;
   629                           
   630                           
   631                           	psect	text1
   632  0215                     __ptext1:	
   633 ;; *************** function _strncmp *****************
   634 ;; Defined at:
   635 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strncmp.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;  s1              1    wreg     PTR const unsigned char 
   638 ;;		 -> main@data(4), 
   639 ;;  s2              1    0[BANK0 ] PTR const unsigned char 
   640 ;;		 -> STR_8(5), STR_7(5), STR_6(5), STR_5(5), 
   641 ;;		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(5), 
   642 ;;  len             2    1[BANK0 ] unsigned int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;  s1              1    5[BANK0 ] PTR const unsigned char 
   645 ;;		 -> main@data(4), 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  2    0[BANK0 ] int 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0
   655 ;;      Params:         0       3
   656 ;;      Locals:         0       1
   657 ;;      Temps:          0       2
   658 ;;      Totals:         0       6
   659 ;;Total ram usage:        6 bytes
   660 ;; Hardware stack levels used:    2
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _strncmp
   670  0215                     _strncmp:	
   671                           
   672                           ;incstack = 0
   673                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
   674                           ;strncmp@s1 stored from wreg
   675  0215  1283               	bcf	3,5	;RP0=0, select bank0
   676  0216  0091               	movwf	strncmp@s1
   677  0217                     l538:	
   678  0217  3001               	movlw	1
   679  0218  028D               	subwf	strncmp@len,f
   680  0219  3000               	movlw	0
   681  021A  1C03               	skipc
   682  021B  038E               	decf	strncmp@len+1,f
   683  021C  028E               	subwf	strncmp@len+1,f
   684  021D  0A0D               	incf	strncmp@len,w
   685  021E  1903               	btfsc	3,2
   686  021F  0A0E               	incf	strncmp@len+1,w
   687  0220  1903               	btfsc	3,2
   688  0221  2A4F               	goto	l920
   689  0222  0811               	movf	strncmp@s1,w
   690  0223  0084               	movwf	4
   691  0224  1383               	bcf	3,7	;select IRP bank0
   692  0225  0800               	movf	0,w
   693  0226  1903               	btfsc	3,2
   694  0227  2A32               	goto	l914
   695  0228  080C               	movf	strncmp@s2,w
   696  0229  0084               	movwf	4
   697  022A  2001               	fcall	stringdir
   698  022B  008F               	movwf	??_strncmp
   699  022C  0811               	movf	strncmp@s1,w
   700  022D  0084               	movwf	4
   701  022E  0800               	movf	0,w
   702  022F  060F               	xorwf	??_strncmp,w
   703  0230  1903               	skipnz
   704  0231  2A46               	goto	l918
   705  0232                     l914:	
   706  0232  080C               	movf	strncmp@s2,w
   707  0233  0084               	movwf	4
   708  0234  2001               	fcall	stringdir
   709  0235  008F               	movwf	??_strncmp
   710  0236  0190               	clrf	??_strncmp+1
   711  0237  098F               	comf	??_strncmp,f
   712  0238  0990               	comf	??_strncmp+1,f
   713  0239  0A8F               	incf	??_strncmp,f
   714  023A  1903               	skipnz
   715  023B  0A90               	incf	??_strncmp+1,f
   716  023C  0811               	movf	strncmp@s1,w
   717  023D  0084               	movwf	4
   718  023E  0800               	movf	0,w
   719  023F  070F               	addwf	??_strncmp,w
   720  0240  008C               	movwf	?_strncmp
   721  0241  0810               	movf	??_strncmp+1,w
   722  0242  1803               	skipnc
   723  0243  0A10               	incf	??_strncmp+1,w
   724  0244  008D               	movwf	?_strncmp+1
   725  0245  0008               	return
   726  0246                     l918:	
   727  0246  3001               	movlw	1
   728  0247  008F               	movwf	??_strncmp
   729  0248  080F               	movf	??_strncmp,w
   730  0249  0791               	addwf	strncmp@s1,f
   731  024A  3001               	movlw	1
   732  024B  008F               	movwf	??_strncmp
   733  024C  080F               	movf	??_strncmp,w
   734  024D  078C               	addwf	strncmp@s2,f
   735  024E  2A17               	goto	l538
   736  024F                     l920:	
   737  024F  018C               	clrf	?_strncmp
   738  0250  018D               	clrf	?_strncmp+1
   739  0251  0008               	return
   740  0252                     __end_of_strncmp:	
   741                           
   742                           	psect	text2
   743  0252                     __ptext2:	
   744 ;; *************** function _CaptureKey *****************
   745 ;; Defined at:
   746 ;;		line 28 in file "newmain.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      unsigned char 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0
   760 ;;      Params:         0       0
   761 ;;      Locals:         0       0
   762 ;;      Temps:          0       2
   763 ;;      Totals:         0       2
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _CaptureKey
   775  0252                     _CaptureKey:	
   776                           
   777                           ;newmain.c: 30: PORTB = 0x04;
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in _CaptureKey: [wreg-fsr0h+status,2+status,0]
   781  0252  3004               	movlw	4
   782  0253  1283               	bcf	3,5	;RP0=0, select bank0
   783  0254  0086               	movwf	6	;volatile
   784                           
   785                           ;newmain.c: 31: switch(PORTB & 0xF0){
   786  0255  2A66               	goto	l846
   787  0256                     l17:	
   788                           ;newmain.c: 33: while((PORTB & 0x10) == 0x10);
   789                           
   790                           ;newmain.c: 32: case 0x10:
   791                           
   792  0256  1A06               	btfsc	6,4	;volatile
   793  0257  2A56               	goto	l17
   794                           
   795                           ;newmain.c: 34: return '1';
   796  0258  3031               	movlw	49
   797  0259  0008               	return
   798  025A                     l22:	
   799                           ;newmain.c: 36: while((PORTB & 0x20) == 0x20);
   800                           
   801                           ;newmain.c: 35: case 0x20:
   802                           
   803  025A  1A86               	btfsc	6,5	;volatile
   804  025B  2A5A               	goto	l22
   805                           
   806                           ;newmain.c: 37: return '4';
   807  025C  3034               	movlw	52
   808  025D  0008               	return
   809  025E                     l26:	
   810                           ;newmain.c: 39: while((PORTB & 0x40) == 0x40);
   811                           
   812                           ;newmain.c: 38: case 0x40:
   813                           
   814  025E  1B06               	btfsc	6,6	;volatile
   815  025F  2A5E               	goto	l26
   816                           
   817                           ;newmain.c: 40: return '7';
   818  0260  3037               	movlw	55
   819  0261  0008               	return
   820  0262                     l30:	
   821                           ;newmain.c: 42: while((PORTB & 0x80) == 0x80);
   822                           
   823                           ;newmain.c: 41: case 0x80:
   824                           
   825  0262  1B86               	btfsc	6,7	;volatile
   826  0263  2A62               	goto	l30
   827                           
   828                           ;newmain.c: 43: return '*';
   829  0264  302A               	movlw	42
   830  0265  0008               	return
   831  0266                     l846:	
   832                           ;newmain.c: 44: }
   833                           
   834  0266  0806               	movf	6,w	;volatile
   835  0267  39F0               	andlw	240
   836  0268  008C               	movwf	??_CaptureKey
   837  0269  018D               	clrf	??_CaptureKey+1
   838                           
   839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   840                           ; Switch size 1, requested type "space"
   841                           ; Number of cases is 1, Range of values is 0 to 0
   842                           ; switch strategies available:
   843                           ; Name         Instructions Cycles
   844                           ; simple_byte            4     3 (average)
   845                           ; direct_byte            7     6 (fixed)
   846                           ; jumptable            260     6 (fixed)
   847                           ;	Chosen strategy is simple_byte
   848  026A  080D               	movf	??_CaptureKey+1,w
   849  026B  3A00               	xorlw	0	; case 0
   850  026C  1903               	skipnz
   851  026D  2A6F               	goto	l1086
   852  026E  2A7D               	goto	l848
   853  026F                     l1086:	
   854                           
   855                           ; Switch size 1, requested type "space"
   856                           ; Number of cases is 4, Range of values is 16 to 128
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte           13     7 (average)
   860                           ; direct_byte          122     9 (fixed)
   861                           ; jumptable            263     9 (fixed)
   862                           ;	Chosen strategy is simple_byte
   863  026F  080C               	movf	??_CaptureKey,w
   864  0270  3A10               	xorlw	16	; case 16
   865  0271  1903               	skipnz
   866  0272  2A56               	goto	l17
   867  0273  3A30               	xorlw	48	; case 32
   868  0274  1903               	skipnz
   869  0275  2A5A               	goto	l22
   870  0276  3A60               	xorlw	96	; case 64
   871  0277  1903               	skipnz
   872  0278  2A5E               	goto	l26
   873  0279  3AC0               	xorlw	192	; case 128
   874  027A  1903               	skipnz
   875  027B  2A62               	goto	l30
   876  027C  2A7D               	goto	l848
   877  027D                     l848:	
   878                           
   879                           ;newmain.c: 45: PORTB = 0x02;
   880  027D  3002               	movlw	2
   881  027E  0086               	movwf	6	;volatile
   882                           
   883                           ;newmain.c: 46: switch(PORTB & 0xF0){
   884  027F  2A90               	goto	l868
   885  0280                     l36:	
   886                           ;newmain.c: 48: while((PORTB & 0x10) == 0x10);
   887                           
   888                           ;newmain.c: 47: case 0x10:
   889                           
   890  0280  1A06               	btfsc	6,4	;volatile
   891  0281  2A80               	goto	l36
   892                           
   893                           ;newmain.c: 49: return '2';
   894  0282  3032               	movlw	50
   895  0283  0008               	return
   896  0284                     l40:	
   897                           ;newmain.c: 51: while((PORTB & 0x20) == 0x20);
   898                           
   899                           ;newmain.c: 50: case 0x20:
   900                           
   901  0284  1A86               	btfsc	6,5	;volatile
   902  0285  2A84               	goto	l40
   903                           
   904                           ;newmain.c: 52: return '5';
   905  0286  3035               	movlw	53
   906  0287  0008               	return
   907  0288                     l44:	
   908                           ;newmain.c: 54: while((PORTB & 0x40) == 0x40);
   909                           
   910                           ;newmain.c: 53: case 0x40:
   911                           
   912  0288  1B06               	btfsc	6,6	;volatile
   913  0289  2A88               	goto	l44
   914                           
   915                           ;newmain.c: 55: return '8';
   916  028A  3038               	movlw	56
   917  028B  0008               	return
   918  028C                     l48:	
   919                           ;newmain.c: 57: while((PORTB & 0x80) == 0x80);
   920                           
   921                           ;newmain.c: 56: case 0x80:
   922                           
   923  028C  1B86               	btfsc	6,7	;volatile
   924  028D  2A8C               	goto	l48
   925                           
   926                           ;newmain.c: 58: return '8';
   927  028E  3038               	movlw	56
   928  028F  0008               	return
   929  0290                     l868:	
   930                           ;newmain.c: 59: }
   931                           
   932  0290  0806               	movf	6,w	;volatile
   933  0291  39F0               	andlw	240
   934  0292  008C               	movwf	??_CaptureKey
   935  0293  018D               	clrf	??_CaptureKey+1
   936                           
   937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   938                           ; Switch size 1, requested type "space"
   939                           ; Number of cases is 1, Range of values is 0 to 0
   940                           ; switch strategies available:
   941                           ; Name         Instructions Cycles
   942                           ; simple_byte            4     3 (average)
   943                           ; direct_byte            7     6 (fixed)
   944                           ; jumptable            260     6 (fixed)
   945                           ;	Chosen strategy is simple_byte
   946  0294  080D               	movf	??_CaptureKey+1,w
   947  0295  3A00               	xorlw	0	; case 0
   948  0296  1903               	skipnz
   949  0297  2A99               	goto	l1088
   950  0298  2AA7               	goto	l870
   951  0299                     l1088:	
   952                           
   953                           ; Switch size 1, requested type "space"
   954                           ; Number of cases is 4, Range of values is 16 to 128
   955                           ; switch strategies available:
   956                           ; Name         Instructions Cycles
   957                           ; simple_byte           13     7 (average)
   958                           ; direct_byte          122     9 (fixed)
   959                           ; jumptable            263     9 (fixed)
   960                           ;	Chosen strategy is simple_byte
   961  0299  080C               	movf	??_CaptureKey,w
   962  029A  3A10               	xorlw	16	; case 16
   963  029B  1903               	skipnz
   964  029C  2A80               	goto	l36
   965  029D  3A30               	xorlw	48	; case 32
   966  029E  1903               	skipnz
   967  029F  2A84               	goto	l40
   968  02A0  3A60               	xorlw	96	; case 64
   969  02A1  1903               	skipnz
   970  02A2  2A88               	goto	l44
   971  02A3  3AC0               	xorlw	192	; case 128
   972  02A4  1903               	skipnz
   973  02A5  2A8C               	goto	l48
   974  02A6  2AA7               	goto	l870
   975  02A7                     l870:	
   976                           
   977                           ;newmain.c: 60: PORTB = 0x01;
   978  02A7  3001               	movlw	1
   979  02A8  0086               	movwf	6	;volatile
   980                           
   981                           ;newmain.c: 61: switch(PORTB & 0xF0){
   982  02A9  2ABA               	goto	l890
   983  02AA                     l54:	
   984                           ;newmain.c: 63: while((PORTB & 0x10) == 0x10);
   985                           
   986                           ;newmain.c: 62: case 0x10:
   987                           
   988  02AA  1A06               	btfsc	6,4	;volatile
   989  02AB  2AAA               	goto	l54
   990                           
   991                           ;newmain.c: 64: return '3';
   992  02AC  3033               	movlw	51
   993  02AD  0008               	return
   994  02AE                     l58:	
   995                           ;newmain.c: 66: while((PORTB & 0x20) == 0x20);
   996                           
   997                           ;newmain.c: 65: case 0x20:
   998                           
   999  02AE  1A86               	btfsc	6,5	;volatile
  1000  02AF  2AAE               	goto	l58
  1001                           
  1002                           ;newmain.c: 67: return '6';
  1003  02B0  3036               	movlw	54
  1004  02B1  0008               	return
  1005  02B2                     l62:	
  1006                           ;newmain.c: 69: while((PORTB & 0x40) == 0x40);
  1007                           
  1008                           ;newmain.c: 68: case 0x40:
  1009                           
  1010  02B2  1B06               	btfsc	6,6	;volatile
  1011  02B3  2AB2               	goto	l62
  1012                           
  1013                           ;newmain.c: 70: return '9';
  1014  02B4  3039               	movlw	57
  1015  02B5  0008               	return
  1016  02B6                     l66:	
  1017                           ;newmain.c: 72: while((PORTB & 0x80) == 0x80);
  1018                           
  1019                           ;newmain.c: 71: case 0x80:
  1020                           
  1021  02B6  1B86               	btfsc	6,7	;volatile
  1022  02B7  2AB6               	goto	l66
  1023                           
  1024                           ;newmain.c: 73: return '#';
  1025  02B8  3023               	movlw	35
  1026  02B9  0008               	return
  1027  02BA                     l890:	
  1028                           ;newmain.c: 74: }
  1029                           
  1030  02BA  0806               	movf	6,w	;volatile
  1031  02BB  39F0               	andlw	240
  1032  02BC  008C               	movwf	??_CaptureKey
  1033  02BD  018D               	clrf	??_CaptureKey+1
  1034                           
  1035                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1036                           ; Switch size 1, requested type "space"
  1037                           ; Number of cases is 1, Range of values is 0 to 0
  1038                           ; switch strategies available:
  1039                           ; Name         Instructions Cycles
  1040                           ; simple_byte            4     3 (average)
  1041                           ; direct_byte            7     6 (fixed)
  1042                           ; jumptable            260     6 (fixed)
  1043                           ;	Chosen strategy is simple_byte
  1044  02BE  080D               	movf	??_CaptureKey+1,w
  1045  02BF  3A00               	xorlw	0	; case 0
  1046  02C0  1903               	skipnz
  1047  02C1  2AC3               	goto	l1090
  1048  02C2  2AD1               	goto	l892
  1049  02C3                     l1090:	
  1050                           
  1051                           ; Switch size 1, requested type "space"
  1052                           ; Number of cases is 4, Range of values is 16 to 128
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte           13     7 (average)
  1056                           ; direct_byte          122     9 (fixed)
  1057                           ; jumptable            263     9 (fixed)
  1058                           ;	Chosen strategy is simple_byte
  1059  02C3  080C               	movf	??_CaptureKey,w
  1060  02C4  3A10               	xorlw	16	; case 16
  1061  02C5  1903               	skipnz
  1062  02C6  2AAA               	goto	l54
  1063  02C7  3A30               	xorlw	48	; case 32
  1064  02C8  1903               	skipnz
  1065  02C9  2AAE               	goto	l58
  1066  02CA  3A60               	xorlw	96	; case 64
  1067  02CB  1903               	skipnz
  1068  02CC  2AB2               	goto	l62
  1069  02CD  3AC0               	xorlw	192	; case 128
  1070  02CE  1903               	skipnz
  1071  02CF  2AB6               	goto	l66
  1072  02D0  2AD1               	goto	l892
  1073  02D1                     l892:	
  1074                           
  1075                           ;newmain.c: 75: return 0xAA;
  1076  02D1  30AA               	movlw	170
  1077  02D2  0008               	return
  1078  02D3                     __end_of_CaptureKey:	
  1079  004E                     btemp	set	78	;btemp
  1080  004E                     wtemp	set	78
  1081  004E                     wtemp0	set	78
  1082  0050                     wtemp1	set	80
  1083  0052                     wtemp2	set	82
  1084  0054                     wtemp3	set	84
  1085  0056                     wtemp4	set	86
  1086  0058                     wtemp5	set	88
  1087  004F                     wtemp6	set	79
  1088  004E                     ttemp	set	78
  1089  004E                     ttemp0	set	78
  1090  0051                     ttemp1	set	81
  1091  0054                     ttemp2	set	84
  1092  0057                     ttemp3	set	87
  1093  004F                     ttemp4	set	79
  1094  004E                     ltemp	set	78
  1095  004E                     ltemp0	set	78
  1096  0052                     ltemp1	set	82
  1097  0056                     ltemp2	set	86
  1098  0050                     ltemp3	set	80


Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66     17      21

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 4
		 -> main@data(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_strncmp

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1820
                                              6 BANK0     11    11      0
                         _CaptureKey
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     3      3    1198
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _CaptureKey                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CaptureKey
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42     11      15       3       31.8%
ABS                  0      0      15       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0      15       6        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Nov 30 19:26:32 2016

                      pc 0002                       l30 0262                       l22 025A  
                     l40 0284                       l17 0256                       l26 025E  
                     l44 0288                       l36 0280                       l62 02B2  
                     l54 02AA                       l48 028C                       l66 02B6  
                     l58 02AE                       fsr 0004                      l538 0217  
                    l920 024F                      l914 0232                      l870 02A7  
                    l846 0266                      l918 0246                      l934 02E9  
                    l848 027D                      l890 02BA                      l892 02D1  
                    l868 0290                      l948 0301                      l958 0310  
                    l992 037C                      l968 0323                      l978 033B  
                    l988 0378                      l996 038A                      u737 031C  
                    u747 0382                      u757 03E4                      u767 03F2  
                    fsr0 0004                      indf 0000                     l1022 03EC  
                   l1006 03A2                     l1016 03DF                     l1090 02C3  
                   l1086 026F                     l1088 0299                     STR_1 0007  
                   STR_2 000C                     STR_3 0011                     STR_4 0016  
                   STR_5 0007                     STR_6 000C                     STR_7 0011  
                   STR_8 0016                     _main 02D3                     btemp 004E  
                   ltemp 004E                     start 0000                     ttemp 004E  
                   wtemp 004E               _CaptureKey 0252                    ?_main 000C  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    pclath 000A                    ltemp0 004E  
                  ltemp1 0052                    ltemp2 0056                    ltemp3 0050  
           main@position 001B                    ttemp0 004E                    ttemp1 0051  
                  ttemp2 0054                    ttemp3 0057                    ttemp4 004F  
                  status 0003                    wtemp0 004E                    wtemp1 0050  
                  wtemp2 0052                    wtemp3 0054                    wtemp4 0056  
                  wtemp5 0058                    wtemp6 004F          __end_of_strncmp 0252  
        __initialization 03FA             __end_of_main 03FA                   ??_main 0012  
            ?_CaptureKey 000C                ??_strncmp 000F  __end_of__initialization 03FE  
    __size_of_CaptureKey 0081               __pbssBANK0 001D               __pmaintext 02D3  
             __stringtab 0001                  __ptext1 0215                  __ptext2 0252  
                _strncmp 0215     end_of_initialization 03FE             ??_CaptureKey 000C  
     __end_of_CaptureKey 02D3      start_initialization 03FA                ___latbits 0000  
          __pcstackBANK0 000C                __pstrings 0001    main@psw_entry_enabled 0018  
               ?_strncmp 000C    main@usr_entry_enabled 001A              __stringbase 0006  
  main@usr_entry_succeed 0019       __end_of__stringtab 0007         __size_of_strncmp 003D  
          __size_of_main 0127               strncmp@len 000D                 main@F579 001D  
               main@data 0014                 main@temp 001C                strncmp@s1 0011  
              strncmp@s2 000C                stringcode 0001                 stringdir 0001  
               stringtab 0001  
