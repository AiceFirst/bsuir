Version 3.2 HI-TECH Software Intermediate Code
"160 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f84a.h
[v _PORTA `Vuc ~T0 @X0 0 e@5 ]
[v F487 `(v ~T0 @X0 1 tf1`ul ]
"152 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic.h
[v __delay `JF487 ~T0 @X0 0 e ]
[p i __delay ]
"203 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f84a.h
[v _PORTB `Vuc ~T0 @X0 0 e@6 ]
[p mainexit ]
"441
[v _TRISA `Vuc ~T0 @X0 0 e@133 ]
"484
[v _TRISB `Vuc ~T0 @X0 0 e@134 ]
[; ;pic16f84a.h: 49: extern volatile unsigned char INDF @ 0x000;
"51 C:\Program Files (x86)\Microchip\xc8\v1.38\include\pic16f84a.h
[; ;pic16f84a.h: 51: asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
[; ;pic16f84a.h: 55: extern volatile unsigned char TMR0 @ 0x001;
"57
[; ;pic16f84a.h: 57: asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
[; ;pic16f84a.h: 61: extern volatile unsigned char PCL @ 0x002;
"63
[; ;pic16f84a.h: 63: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f84a.h: 67: extern volatile unsigned char STATUS @ 0x003;
"69
[; ;pic16f84a.h: 69: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f84a.h: 72: typedef union {
[; ;pic16f84a.h: 73: struct {
[; ;pic16f84a.h: 74: unsigned C :1;
[; ;pic16f84a.h: 75: unsigned DC :1;
[; ;pic16f84a.h: 76: unsigned Z :1;
[; ;pic16f84a.h: 77: unsigned nPD :1;
[; ;pic16f84a.h: 78: unsigned nTO :1;
[; ;pic16f84a.h: 79: unsigned RP :2;
[; ;pic16f84a.h: 80: unsigned IRP :1;
[; ;pic16f84a.h: 81: };
[; ;pic16f84a.h: 82: struct {
[; ;pic16f84a.h: 83: unsigned :5;
[; ;pic16f84a.h: 84: unsigned RP0 :1;
[; ;pic16f84a.h: 85: unsigned RP1 :1;
[; ;pic16f84a.h: 86: };
[; ;pic16f84a.h: 87: struct {
[; ;pic16f84a.h: 88: unsigned CARRY :1;
[; ;pic16f84a.h: 89: };
[; ;pic16f84a.h: 90: struct {
[; ;pic16f84a.h: 91: unsigned :2;
[; ;pic16f84a.h: 92: unsigned ZERO :1;
[; ;pic16f84a.h: 93: };
[; ;pic16f84a.h: 94: } STATUSbits_t;
[; ;pic16f84a.h: 95: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f84a.h: 154: extern volatile unsigned char FSR @ 0x004;
"156
[; ;pic16f84a.h: 156: asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
[; ;pic16f84a.h: 160: extern volatile unsigned char PORTA @ 0x005;
"162
[; ;pic16f84a.h: 162: asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
[; ;pic16f84a.h: 165: typedef union {
[; ;pic16f84a.h: 166: struct {
[; ;pic16f84a.h: 167: unsigned RA0 :1;
[; ;pic16f84a.h: 168: unsigned RA1 :1;
[; ;pic16f84a.h: 169: unsigned RA2 :1;
[; ;pic16f84a.h: 170: unsigned RA3 :1;
[; ;pic16f84a.h: 171: unsigned RA4 :1;
[; ;pic16f84a.h: 172: };
[; ;pic16f84a.h: 173: } PORTAbits_t;
[; ;pic16f84a.h: 174: extern volatile PORTAbits_t PORTAbits @ 0x005;
[; ;pic16f84a.h: 203: extern volatile unsigned char PORTB @ 0x006;
"205
[; ;pic16f84a.h: 205: asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
[; ;pic16f84a.h: 208: typedef union {
[; ;pic16f84a.h: 209: struct {
[; ;pic16f84a.h: 210: unsigned RB0 :1;
[; ;pic16f84a.h: 211: unsigned RB1 :1;
[; ;pic16f84a.h: 212: unsigned RB2 :1;
[; ;pic16f84a.h: 213: unsigned RB3 :1;
[; ;pic16f84a.h: 214: unsigned RB4 :1;
[; ;pic16f84a.h: 215: unsigned RB5 :1;
[; ;pic16f84a.h: 216: unsigned RB6 :1;
[; ;pic16f84a.h: 217: unsigned RB7 :1;
[; ;pic16f84a.h: 218: };
[; ;pic16f84a.h: 219: } PORTBbits_t;
[; ;pic16f84a.h: 220: extern volatile PORTBbits_t PORTBbits @ 0x006;
[; ;pic16f84a.h: 264: extern volatile unsigned char EEDATA @ 0x008;
"266
[; ;pic16f84a.h: 266: asm("EEDATA equ 08h");
[; <" EEDATA equ 08h ;# ">
[; ;pic16f84a.h: 270: extern volatile unsigned char EEADR @ 0x009;
"272
[; ;pic16f84a.h: 272: asm("EEADR equ 09h");
[; <" EEADR equ 09h ;# ">
[; ;pic16f84a.h: 276: extern volatile unsigned char PCLATH @ 0x00A;
"278
[; ;pic16f84a.h: 278: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f84a.h: 281: typedef union {
[; ;pic16f84a.h: 282: struct {
[; ;pic16f84a.h: 283: unsigned PCLATH :5;
[; ;pic16f84a.h: 284: };
[; ;pic16f84a.h: 285: } PCLATHbits_t;
[; ;pic16f84a.h: 286: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f84a.h: 295: extern volatile unsigned char INTCON @ 0x00B;
"297
[; ;pic16f84a.h: 297: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f84a.h: 300: typedef union {
[; ;pic16f84a.h: 301: struct {
[; ;pic16f84a.h: 302: unsigned RBIF :1;
[; ;pic16f84a.h: 303: unsigned INTF :1;
[; ;pic16f84a.h: 304: unsigned T0IF :1;
[; ;pic16f84a.h: 305: unsigned RBIE :1;
[; ;pic16f84a.h: 306: unsigned INTE :1;
[; ;pic16f84a.h: 307: unsigned T0IE :1;
[; ;pic16f84a.h: 308: unsigned EEIE :1;
[; ;pic16f84a.h: 309: unsigned GIE :1;
[; ;pic16f84a.h: 310: };
[; ;pic16f84a.h: 311: struct {
[; ;pic16f84a.h: 312: unsigned :2;
[; ;pic16f84a.h: 313: unsigned TMR0IF :1;
[; ;pic16f84a.h: 314: unsigned :2;
[; ;pic16f84a.h: 315: unsigned TMR0IE :1;
[; ;pic16f84a.h: 316: };
[; ;pic16f84a.h: 317: } INTCONbits_t;
[; ;pic16f84a.h: 318: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f84a.h: 372: extern volatile unsigned char OPTION_REG @ 0x081;
"374
[; ;pic16f84a.h: 374: asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
[; ;pic16f84a.h: 377: typedef union {
[; ;pic16f84a.h: 378: struct {
[; ;pic16f84a.h: 379: unsigned PS :3;
[; ;pic16f84a.h: 380: unsigned PSA :1;
[; ;pic16f84a.h: 381: unsigned T0SE :1;
[; ;pic16f84a.h: 382: unsigned T0CS :1;
[; ;pic16f84a.h: 383: unsigned INTEDG :1;
[; ;pic16f84a.h: 384: unsigned nRBPU :1;
[; ;pic16f84a.h: 385: };
[; ;pic16f84a.h: 386: struct {
[; ;pic16f84a.h: 387: unsigned PS0 :1;
[; ;pic16f84a.h: 388: unsigned PS1 :1;
[; ;pic16f84a.h: 389: unsigned PS2 :1;
[; ;pic16f84a.h: 390: };
[; ;pic16f84a.h: 391: } OPTION_REGbits_t;
[; ;pic16f84a.h: 392: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x081;
[; ;pic16f84a.h: 441: extern volatile unsigned char TRISA @ 0x085;
"443
[; ;pic16f84a.h: 443: asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
[; ;pic16f84a.h: 446: typedef union {
[; ;pic16f84a.h: 447: struct {
[; ;pic16f84a.h: 448: unsigned TRISA0 :1;
[; ;pic16f84a.h: 449: unsigned TRISA1 :1;
[; ;pic16f84a.h: 450: unsigned TRISA2 :1;
[; ;pic16f84a.h: 451: unsigned TRISA3 :1;
[; ;pic16f84a.h: 452: unsigned TRISA4 :1;
[; ;pic16f84a.h: 453: };
[; ;pic16f84a.h: 454: } TRISAbits_t;
[; ;pic16f84a.h: 455: extern volatile TRISAbits_t TRISAbits @ 0x085;
[; ;pic16f84a.h: 484: extern volatile unsigned char TRISB @ 0x086;
"486
[; ;pic16f84a.h: 486: asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
[; ;pic16f84a.h: 489: typedef union {
[; ;pic16f84a.h: 490: struct {
[; ;pic16f84a.h: 491: unsigned TRISB0 :1;
[; ;pic16f84a.h: 492: unsigned TRISB1 :1;
[; ;pic16f84a.h: 493: unsigned TRISB2 :1;
[; ;pic16f84a.h: 494: unsigned TRISB3 :1;
[; ;pic16f84a.h: 495: unsigned TRISB4 :1;
[; ;pic16f84a.h: 496: unsigned TRISB5 :1;
[; ;pic16f84a.h: 497: unsigned TRISB6 :1;
[; ;pic16f84a.h: 498: unsigned TRISB7 :1;
[; ;pic16f84a.h: 499: };
[; ;pic16f84a.h: 500: } TRISBbits_t;
[; ;pic16f84a.h: 501: extern volatile TRISBbits_t TRISBbits @ 0x086;
[; ;pic16f84a.h: 545: extern volatile unsigned char EECON1 @ 0x088;
"547
[; ;pic16f84a.h: 547: asm("EECON1 equ 088h");
[; <" EECON1 equ 088h ;# ">
[; ;pic16f84a.h: 550: typedef union {
[; ;pic16f84a.h: 551: struct {
[; ;pic16f84a.h: 552: unsigned RD :1;
[; ;pic16f84a.h: 553: unsigned WR :1;
[; ;pic16f84a.h: 554: unsigned WREN :1;
[; ;pic16f84a.h: 555: unsigned WRERR :1;
[; ;pic16f84a.h: 556: unsigned EEIF :1;
[; ;pic16f84a.h: 557: };
[; ;pic16f84a.h: 558: } EECON1bits_t;
[; ;pic16f84a.h: 559: extern volatile EECON1bits_t EECON1bits @ 0x088;
[; ;pic16f84a.h: 588: extern volatile unsigned char EECON2 @ 0x089;
"590
[; ;pic16f84a.h: 590: asm("EECON2 equ 089h");
[; <" EECON2 equ 089h ;# ">
[; ;pic16f84a.h: 600: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f84a.h: 602: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f84a.h: 604: extern volatile __bit EEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f84a.h: 606: extern volatile __bit EEIF @ (((unsigned) &EECON1)*8) + 4;
[; ;pic16f84a.h: 608: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f84a.h: 610: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f84a.h: 612: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f84a.h: 614: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f84a.h: 616: extern volatile __bit IRP @ (((unsigned) &STATUS)*8) + 7;
[; ;pic16f84a.h: 618: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f84a.h: 620: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f84a.h: 622: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f84a.h: 624: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f84a.h: 626: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f84a.h: 628: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f84a.h: 630: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f84a.h: 632: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f84a.h: 634: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f84a.h: 636: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f84a.h: 638: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f84a.h: 640: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f84a.h: 642: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f84a.h: 644: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f84a.h: 646: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f84a.h: 648: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f84a.h: 650: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f84a.h: 652: extern volatile __bit RBIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f84a.h: 654: extern volatile __bit RBIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f84a.h: 656: extern volatile __bit RD @ (((unsigned) &EECON1)*8) + 0;
[; ;pic16f84a.h: 658: extern volatile __bit RP0 @ (((unsigned) &STATUS)*8) + 5;
[; ;pic16f84a.h: 660: extern volatile __bit RP1 @ (((unsigned) &STATUS)*8) + 6;
[; ;pic16f84a.h: 662: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f84a.h: 664: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 666: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 668: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f84a.h: 670: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f84a.h: 672: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f84a.h: 674: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f84a.h: 676: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f84a.h: 678: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f84a.h: 680: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f84a.h: 682: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f84a.h: 684: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f84a.h: 686: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f84a.h: 688: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f84a.h: 690: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f84a.h: 692: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f84a.h: 694: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f84a.h: 696: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f84a.h: 698: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f84a.h: 700: extern volatile __bit WR @ (((unsigned) &EECON1)*8) + 1;
[; ;pic16f84a.h: 702: extern volatile __bit WREN @ (((unsigned) &EECON1)*8) + 2;
[; ;pic16f84a.h: 704: extern volatile __bit WRERR @ (((unsigned) &EECON1)*8) + 3;
[; ;pic16f84a.h: 706: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f84a.h: 708: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f84a.h: 710: extern volatile __bit nRBPU @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic16f84a.h: 712: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef signed short long int int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 43: typedef unsigned char uint8_t;
[; ;stdint.h: 49: typedef unsigned int uint16_t;
[; ;stdint.h: 56: typedef unsigned short long int uint24_t;
[; ;stdint.h: 63: typedef unsigned long int uint32_t;
[; ;stdint.h: 71: typedef signed char int_least8_t;
[; ;stdint.h: 78: typedef signed int int_least16_t;
[; ;stdint.h: 90: typedef signed short long int int_least24_t;
[; ;stdint.h: 98: typedef signed long int int_least32_t;
[; ;stdint.h: 105: typedef unsigned char uint_least8_t;
[; ;stdint.h: 111: typedef unsigned int uint_least16_t;
[; ;stdint.h: 121: typedef unsigned short long int uint_least24_t;
[; ;stdint.h: 128: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 137: typedef signed char int_fast8_t;
[; ;stdint.h: 144: typedef signed int int_fast16_t;
[; ;stdint.h: 156: typedef signed short long int int_fast24_t;
[; ;stdint.h: 164: typedef signed long int int_fast32_t;
[; ;stdint.h: 171: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 177: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 187: typedef unsigned short long int uint_fast24_t;
[; ;stdint.h: 194: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 200: typedef int32_t intmax_t;
[; ;stdint.h: 205: typedef uint32_t uintmax_t;
[; ;stdint.h: 210: typedef int16_t intptr_t;
[; ;stdint.h: 215: typedef uint16_t uintptr_t;
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic.h: 28: extern void __nop(void);
[; ;pic.h: 77: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 141: extern void flash_erase(unsigned short addr);
[; ;eeprom_routines.h: 114: extern void eeprom_write(unsigned char addr, unsigned char value);
[; ;eeprom_routines.h: 115: extern unsigned char eeprom_read(unsigned char addr);
[; ;eeprom_routines.h: 116: extern void eecpymem(volatile unsigned char *to, __eeprom unsigned char *from, unsigned char size);
[; ;eeprom_routines.h: 117: extern void memcpyee(__eeprom unsigned char *to, const unsigned char *from, unsigned char size);
[; ;pic.h: 152: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 186: extern unsigned char __resetbits;
[; ;pic.h: 187: extern __bit __powerdown;
[; ;pic.h: 188: extern __bit __timeout;
"15 newmain.c
[v _Play `(v ~T0 @X0 1 ef1`uc ]
"16
{
[; ;newmain.c: 15: void Play(uint8_t data)
[; ;newmain.c: 16: {
[e :U _Play ]
"15
[v _data `uc ~T0 @X0 1 r1 ]
"16
[f ]
[; ;newmain.c: 17: switch(data){
"17
[e $U 31  ]
{
[; ;newmain.c: 18: case '1':
"18
[e :U 32 ]
[; ;newmain.c: 19: for(uint16_t i = 0; i < 50; i++){
"19
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 33  ]
[e $U 34  ]
[e :U 33 ]
{
[; ;newmain.c: 20: PORTA |= 0x01;
"20
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 21: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"21
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 22: PORTA &= ~0x01;
"22
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 23: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"23
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"24
}
"19
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 33  ]
[e :U 34 ]
"24
}
[; ;newmain.c: 24: }
[; ;newmain.c: 25: break;
"25
[e $U 30  ]
[; ;newmain.c: 26: case '2':
"26
[e :U 36 ]
[; ;newmain.c: 27: for(uint16_t i = 0; i < 50; i++){
"27
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 37  ]
[e $U 38  ]
[e :U 37 ]
{
[; ;newmain.c: 28: PORTA |= 0x01;
"28
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 29: _delay((unsigned long)((900)*(1000000/4000000.0)));
"29
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 30: PORTA &= ~0x01;
"30
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 31: _delay((unsigned long)((900)*(1000000/4000000.0)));
"31
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"32
}
"27
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 37  ]
[e :U 38 ]
"32
}
[; ;newmain.c: 32: }
[; ;newmain.c: 33: break;
"33
[e $U 30  ]
[; ;newmain.c: 34: case '3':
"34
[e :U 40 ]
[; ;newmain.c: 35: for(uint16_t i = 0; i < 50; i++){
"35
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 41  ]
[e $U 42  ]
[e :U 41 ]
{
[; ;newmain.c: 36: PORTA |= 0x01;
"36
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 37: _delay((unsigned long)((800)*(1000000/4000000.0)));
"37
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 38: PORTA &= ~0x01;
"38
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 39: _delay((unsigned long)((800)*(1000000/4000000.0)));
"39
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"40
}
"35
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 41  ]
[e :U 42 ]
"40
}
[; ;newmain.c: 40: }
[; ;newmain.c: 41: break;
"41
[e $U 30  ]
[; ;newmain.c: 42: case '4':
"42
[e :U 44 ]
[; ;newmain.c: 43: for(uint16_t i = 0; i < 50; i++){
"43
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 45  ]
[e $U 46  ]
[e :U 45 ]
{
[; ;newmain.c: 44: PORTA |= 0x01;
"44
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 45: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"45
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 46: PORTA &= ~0x01;
"46
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 47: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"47
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"48
}
"43
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 45  ]
[e :U 46 ]
"48
}
[; ;newmain.c: 48: }
[; ;newmain.c: 49: break;
"49
[e $U 30  ]
[; ;newmain.c: 50: case '5':
"50
[e :U 48 ]
[; ;newmain.c: 51: for(uint16_t i = 0; i < 50; i++){
"51
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 49  ]
[e $U 50  ]
[e :U 49 ]
{
[; ;newmain.c: 52: PORTA |= 0x01;
"52
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 53: _delay((unsigned long)((900)*(1000000/4000000.0)));
"53
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 54: PORTA &= ~0x01;
"54
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 55: _delay((unsigned long)((900)*(1000000/4000000.0)));
"55
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"56
}
"51
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 49  ]
[e :U 50 ]
"56
}
[; ;newmain.c: 56: }
[; ;newmain.c: 57: break;
"57
[e $U 30  ]
[; ;newmain.c: 58: case '6':
"58
[e :U 52 ]
[; ;newmain.c: 59: for(uint16_t i = 0; i < 50; i++){
"59
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 53  ]
[e $U 54  ]
[e :U 53 ]
{
[; ;newmain.c: 60: PORTA |= 0x01;
"60
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 61: _delay((unsigned long)((800)*(1000000/4000000.0)));
"61
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 62: PORTA &= ~0x01;
"62
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 63: _delay((unsigned long)((800)*(1000000/4000000.0)));
"63
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"64
}
"59
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 53  ]
[e :U 54 ]
"64
}
[; ;newmain.c: 64: }
[; ;newmain.c: 65: break;
"65
[e $U 30  ]
[; ;newmain.c: 66: case '7':
"66
[e :U 56 ]
[; ;newmain.c: 67: for(uint16_t i = 0; i < 50; i++){
"67
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 57  ]
[e $U 58  ]
[e :U 57 ]
{
[; ;newmain.c: 68: PORTA |= 0x01;
"68
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 69: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"69
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 70: PORTA &= ~0x01;
"70
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 71: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"71
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"72
}
"67
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 57  ]
[e :U 58 ]
"72
}
[; ;newmain.c: 72: }
[; ;newmain.c: 73: break;
"73
[e $U 30  ]
[; ;newmain.c: 74: case '8':
"74
[e :U 60 ]
[; ;newmain.c: 75: for(uint16_t i = 0; i < 50; i++){
"75
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 61  ]
[e $U 62  ]
[e :U 61 ]
{
[; ;newmain.c: 76: PORTA |= 0x01;
"76
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 77: _delay((unsigned long)((900)*(1000000/4000000.0)));
"77
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 78: PORTA &= ~0x01;
"78
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 79: _delay((unsigned long)((900)*(1000000/4000000.0)));
"79
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"80
}
"75
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 61  ]
[e :U 62 ]
"80
}
[; ;newmain.c: 80: }
[; ;newmain.c: 81: break;
"81
[e $U 30  ]
[; ;newmain.c: 82: case '9':
"82
[e :U 64 ]
[; ;newmain.c: 83: for(uint16_t i = 0; i < 50; i++){
"83
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 65  ]
[e $U 66  ]
[e :U 65 ]
{
[; ;newmain.c: 84: PORTA |= 0x01;
"84
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 85: _delay((unsigned long)((800)*(1000000/4000000.0)));
"85
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 86: PORTA &= ~0x01;
"86
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 87: _delay((unsigned long)((800)*(1000000/4000000.0)));
"87
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"88
}
"83
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 65  ]
[e :U 66 ]
"88
}
[; ;newmain.c: 88: }
[; ;newmain.c: 89: break;
"89
[e $U 30  ]
[; ;newmain.c: 90: case '0':
"90
[e :U 68 ]
[; ;newmain.c: 91: for(uint16_t i = 0; i < 50; i++){
"91
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 69  ]
[e $U 70  ]
[e :U 69 ]
{
[; ;newmain.c: 92: PORTA |= 0x01;
"92
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 93: _delay((unsigned long)((900)*(1000000/4000000.0)));
"93
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 94: PORTA &= ~0x01;
"94
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 95: _delay((unsigned long)((900)*(1000000/4000000.0)));
"95
[e ( __delay (1 -> * -> -> 900 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"96
}
"91
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 69  ]
[e :U 70 ]
"96
}
[; ;newmain.c: 96: }
[; ;newmain.c: 97: break;
"97
[e $U 30  ]
[; ;newmain.c: 98: case '*':
"98
[e :U 72 ]
[; ;newmain.c: 99: for(uint16_t i = 0; i < 50; i++){
"99
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 73  ]
[e $U 74  ]
[e :U 73 ]
{
[; ;newmain.c: 100: PORTA |= 0x01;
"100
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 101: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"101
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 102: PORTA &= ~0x01;
"102
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 103: _delay((unsigned long)((1000)*(1000000/4000000.0)));
"103
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"104
}
"99
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 73  ]
[e :U 74 ]
"104
}
[; ;newmain.c: 104: }
[; ;newmain.c: 105: break;
"105
[e $U 30  ]
[; ;newmain.c: 106: case '#':
"106
[e :U 76 ]
[; ;newmain.c: 107: for(uint16_t i = 0; i < 50; i++){
"107
{
[v _i `ui ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `ui ]
[e $ < _i -> -> 50 `i `ui 77  ]
[e $U 78  ]
[e :U 77 ]
{
[; ;newmain.c: 108: PORTA |= 0x01;
"108
[e =| _PORTA -> -> 1 `i `uc ]
[; ;newmain.c: 109: _delay((unsigned long)((800)*(1000000/4000000.0)));
"109
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
[; ;newmain.c: 110: PORTA &= ~0x01;
"110
[e =& _PORTA -> ~ -> 1 `i `uc ]
[; ;newmain.c: 111: _delay((unsigned long)((800)*(1000000/4000000.0)));
"111
[e ( __delay (1 -> * -> -> 800 `i `d / -> -> 1000000 `l `d .4000000.0 `ul ]
"112
}
"107
[e ++ _i -> -> 1 `i `ui ]
[e $ < _i -> -> 50 `i `ui 77  ]
[e :U 78 ]
"112
}
[; ;newmain.c: 112: }
[; ;newmain.c: 113: break;
"113
[e $U 30  ]
[; ;newmain.c: 114: default:
"114
[e :U 80 ]
[; ;newmain.c: 115: return;
"115
[e $UE 29  ]
"116
}
[; ;newmain.c: 116: }
[e $U 30  ]
"17
[e :U 31 ]
[e [\ _data , $ -> -> 49 `ui `uc 32
 , $ -> -> 50 `ui `uc 36
 , $ -> -> 51 `ui `uc 40
 , $ -> -> 52 `ui `uc 44
 , $ -> -> 53 `ui `uc 48
 , $ -> -> 54 `ui `uc 52
 , $ -> -> 55 `ui `uc 56
 , $ -> -> 56 `ui `uc 60
 , $ -> -> 57 `ui `uc 64
 , $ -> -> 48 `ui `uc 68
 , $ -> -> 42 `ui `uc 72
 , $ -> -> 35 `ui `uc 76
 80 ]
"116
[e :U 30 ]
[; ;newmain.c: 117: }
"117
[e :UE 29 ]
}
"119
[v _CaptureKey `(uc ~T0 @X0 1 ef ]
"120
{
[; ;newmain.c: 119: uint8_t CaptureKey()
[; ;newmain.c: 120: {
[e :U _CaptureKey ]
[f ]
[; ;newmain.c: 121: PORTB = 0x04;
"121
[e = _PORTB -> -> 4 `i `uc ]
[; ;newmain.c: 122: switch(PORTB & 0xF0){
"122
[e $U 83  ]
{
[; ;newmain.c: 123: case 0x10:
"123
[e :U 84 ]
[; ;newmain.c: 124: return '1';
"124
[e ) -> -> 49 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 125: case 0x20:
"125
[e :U 85 ]
[; ;newmain.c: 126: return '4';
"126
[e ) -> -> 52 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 127: case 0x40:
"127
[e :U 86 ]
[; ;newmain.c: 128: return '7';
"128
[e ) -> -> 55 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 129: case 0x80:
"129
[e :U 87 ]
[; ;newmain.c: 130: return '*';
"130
[e ) -> -> 42 `ui `uc ]
[e $UE 81  ]
"131
}
[; ;newmain.c: 131: }
[e $U 82  ]
"122
[e :U 83 ]
[e [\ & -> _PORTB `i -> 240 `i , $ -> 16 `i 84
 , $ -> 32 `i 85
 , $ -> 64 `i 86
 , $ -> 128 `i 87
 82 ]
"131
[e :U 82 ]
[; ;newmain.c: 132: PORTB = 0x02;
"132
[e = _PORTB -> -> 2 `i `uc ]
[; ;newmain.c: 133: switch(PORTB & 0xF0){
"133
[e $U 89  ]
{
[; ;newmain.c: 134: case 0x10:
"134
[e :U 90 ]
[; ;newmain.c: 135: return '2';
"135
[e ) -> -> 50 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 136: case 0x20:
"136
[e :U 91 ]
[; ;newmain.c: 137: return '5';
"137
[e ) -> -> 53 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 138: case 0x40:
"138
[e :U 92 ]
[; ;newmain.c: 139: return '8';
"139
[e ) -> -> 56 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 140: case 0x80:
"140
[e :U 93 ]
[; ;newmain.c: 141: return '8';
"141
[e ) -> -> 56 `ui `uc ]
[e $UE 81  ]
"142
}
[; ;newmain.c: 142: }
[e $U 88  ]
"133
[e :U 89 ]
[e [\ & -> _PORTB `i -> 240 `i , $ -> 16 `i 90
 , $ -> 32 `i 91
 , $ -> 64 `i 92
 , $ -> 128 `i 93
 88 ]
"142
[e :U 88 ]
[; ;newmain.c: 143: PORTB = 0x01;
"143
[e = _PORTB -> -> 1 `i `uc ]
[; ;newmain.c: 144: switch(PORTB & 0xF0){
"144
[e $U 95  ]
{
[; ;newmain.c: 145: case 0x10:
"145
[e :U 96 ]
[; ;newmain.c: 146: return '3';
"146
[e ) -> -> 51 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 147: case 0x20:
"147
[e :U 97 ]
[; ;newmain.c: 148: return '6';
"148
[e ) -> -> 54 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 149: case 0x40:
"149
[e :U 98 ]
[; ;newmain.c: 150: return '9';
"150
[e ) -> -> 57 `ui `uc ]
[e $UE 81  ]
[; ;newmain.c: 151: case 0x80:
"151
[e :U 99 ]
[; ;newmain.c: 152: return '#';
"152
[e ) -> -> 35 `ui `uc ]
[e $UE 81  ]
"153
}
[; ;newmain.c: 153: }
[e $U 94  ]
"144
[e :U 95 ]
[e [\ & -> _PORTB `i -> 240 `i , $ -> 16 `i 96
 , $ -> 32 `i 97
 , $ -> 64 `i 98
 , $ -> 128 `i 99
 94 ]
"153
[e :U 94 ]
[; ;newmain.c: 154: return 0xAA;
"154
[e ) -> -> 170 `i `uc ]
[e $UE 81  ]
[; ;newmain.c: 155: }
"155
[e :UE 81 ]
}
"157
[v _main `(v ~T0 @X0 1 ef ]
"158
{
[; ;newmain.c: 157: void main()
[; ;newmain.c: 158: {
[e :U _main ]
[f ]
[; ;newmain.c: 159: TRISA = 0xE0;
"159
[e = _TRISA -> -> 224 `i `uc ]
[; ;newmain.c: 160: TRISB = 0xF8;
"160
[e = _TRISB -> -> 248 `i `uc ]
[; ;newmain.c: 161: PORTA = 0x00;
"161
[e = _PORTA -> -> 0 `i `uc ]
[; ;newmain.c: 162: PORTB = 0x07;
"162
[e = _PORTB -> -> 7 `i `uc ]
[; ;newmain.c: 164: while(1)
"164
[e :U 102 ]
[; ;newmain.c: 165: {
"165
{
[; ;newmain.c: 166: Play(CaptureKey());
"166
[e ( _Play (1 ( _CaptureKey ..  ]
"167
}
[e :U 101 ]
"164
[e $U 102  ]
[e :U 103 ]
[; ;newmain.c: 167: }
[; ;newmain.c: 168: }
"168
[e :UE 100 ]
}
