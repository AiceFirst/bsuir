

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 24 18:54:20 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	swtext1,local,class=CONST,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x4E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  0081                     	;# 
    30  0085                     	;# 
    31  0086                     	;# 
    32  0088                     	;# 
    33  0089                     	;# 
    34  0005                     _PORTA	set	5
    35  0006                     _PORTB	set	6
    36  0085                     _TRISA	set	133
    37  0086                     _TRISB	set	134
    38                           
    39                           	psect	cinit
    40  03FC                     start_initialization:	
    41                           ; #config settings
    42                           
    43  03FC                     __initialization:	
    44                           
    45                           ; Clear objects allocated to BANK0
    46  03FC  0194               	clrf	__pbssBANK0& (0+127)
    47  03FD  0195               	clrf	(__pbssBANK0+1)& (0+127)
    48  03FE                     end_of_initialization:	
    49                           ;End of C runtime variable initialization code
    50                           
    51  03FE                     __end_of__initialization:	
    52  03FE  0183               	clrf	3
    53  03FF  2B5C               	ljmp	_main	;jump to C main() function
    54                           
    55                           	psect	bssBANK0
    56  0014                     __pbssBANK0:	
    57  0014                     _type:	
    58  0014                     	ds	1
    59  0015                     _code:	
    60  0015                     	ds	1
    61                           
    62                           	psect	cstackCOMMON
    63  0000                     __pcstackCOMMON:	
    64  0000                     ??_PlaySequence:	
    65                           
    66                           	psect	cstackBANK0
    67  000C                     __pcstackBANK0:	
    68                           ; 1 bytes @ 0x0
    69                           
    70  000C                     ?_generateCode1:	
    71  000C                     ??_generateCode1:	
    72                           ; 1 bytes @ 0x0
    73                           
    74  000C                     ?_generateCode2:	
    75                           ; 1 bytes @ 0x0
    76                           
    77  000C                     ??_generateCode2:	
    78                           ; 1 bytes @ 0x0
    79                           
    80  000C                     ?_generateCode3:	
    81                           ; 1 bytes @ 0x0
    82                           
    83  000C                     ??_generateCode3:	
    84                           ; 1 bytes @ 0x0
    85                           
    86  000C                     ?_generateCode4:	
    87                           ; 1 bytes @ 0x0
    88                           
    89  000C                     ??_generateCode4:	
    90                           ; 1 bytes @ 0x0
    91                           
    92  000C                     ?_generateCode5:	
    93                           ; 1 bytes @ 0x0
    94                           
    95  000C                     ??_generateCode5:	
    96                           ; 1 bytes @ 0x0
    97                           
    98  000C                     ?_PlaySequence:	
    99                           ; 1 bytes @ 0x0
   100                           
   101  000C                     ?_CaptureKey:	
   102                           ; 1 bytes @ 0x0
   103                           
   104  000C                     ??_CaptureKey:	
   105                           ; 1 bytes @ 0x0
   106                           
   107  000C                     ?_main:	
   108                           ; 1 bytes @ 0x0
   109                           
   110                           
   111                           ; 1 bytes @ 0x0
   112  000C                     	ds	2
   113  000E                     generateCode4@res:	
   114                           
   115                           ; 1 bytes @ 0x2
   116  000E                     	ds	1
   117  000F                     PlaySequence@data:	
   118                           
   119                           ; 1 bytes @ 0x3
   120  000F                     	ds	1
   121  0010                     ??_main:	
   122                           
   123                           ; 1 bytes @ 0x4
   124  0010                     	ds	2
   125  0012                     main@i:	
   126                           
   127                           ; 1 bytes @ 0x6
   128  0012                     	ds	1
   129  0013                     main@temp_btn:	
   130                           
   131                           ; 1 bytes @ 0x7
   132  0013                     	ds	1
   133                           
   134                           	psect	maintext
   135  035C                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 120 in file "newmain.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;  i               1    6[BANK0 ] unsigned char 
   146 ;;  temp_btn        1    7[BANK0 ] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;                  1    wreg      void 
   149 ;; Registers used:
   150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : B00/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0
   156 ;;      Params:         0       0
   157 ;;      Locals:         0       2
   158 ;;      Temps:          0       2
   159 ;;      Totals:         0       4
   160 ;;Total ram usage:        4 bytes
   161 ;; Hardware stack levels required when called:    2
   162 ;; This function calls:
   163 ;;		_CaptureKey
   164 ;;		_PlaySequence
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           
   171                           ;psect for function _main
   172  035C                     _main:	
   173                           
   174                           ;newmain.c: 123: TRISA = 0xE0;
   175                           
   176                           ;incstack = 0
   177                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   178  035C  30E0               	movlw	224
   179  035D  1683               	bsf	3,5	;RP0=1, select bank1
   180  035E  0085               	movwf	5	;volatile
   181                           
   182                           ;newmain.c: 124: TRISB = 0xF8;
   183  035F  30F8               	movlw	248
   184  0360  0086               	movwf	6	;volatile
   185                           
   186                           ;newmain.c: 125: PORTA = 0x00;
   187  0361  1283               	bcf	3,5	;RP0=0, select bank0
   188  0362  0185               	clrf	5	;volatile
   189                           
   190                           ;newmain.c: 126: PORTB = 0x07;
   191  0363  3007               	movlw	7
   192  0364  0086               	movwf	6	;volatile
   193  0365                     l73:	
   194                           ;newmain.c: 127: uint8_t temp_btn;
   195                           ;newmain.c: 128: while(1)
   196                           
   197                           
   198                           ;newmain.c: 129: {
   199                           ;newmain.c: 130: for (uint8_t i =0; i<10; i++){
   200  0365  1283               	bcf	3,5	;RP0=0, select bank0
   201  0366  0192               	clrf	main@i
   202  0367  300A               	movlw	10
   203  0368  0212               	subwf	main@i,w
   204  0369  1803               	btfsc	3,0
   205  036A  2B90               	goto	l1045
   206  036B                     l1027:	
   207                           
   208                           ;newmain.c: 131: temp_btn = CaptureKey();
   209  036B  2393               	fcall	_CaptureKey
   210  036C  1283               	bcf	3,5	;RP0=0, select bank0
   211  036D  0090               	movwf	??_main
   212  036E  0810               	movf	??_main,w
   213  036F  0093               	movwf	main@temp_btn
   214                           
   215                           ;newmain.c: 132: _delay((unsigned long)((100)*(1000000/4000.0)));
   216  0370  3021               	movlw	33
   217  0371  0091               	movwf	??_main+1
   218  0372  3076               	movlw	118
   219  0373  0090               	movwf	??_main
   220  0374                     u217:	
   221  0374  0B90               	decfsz	??_main,f
   222  0375  2B74               	goto	u217
   223  0376  0B91               	decfsz	??_main+1,f
   224  0377  2B74               	goto	u217
   225  0378  0000               	nop
   226                           
   227                           ;newmain.c: 133: if (0xAA == temp_btn)
   228  0379  30AA               	movlw	170
   229  037A  1283               	bcf	3,5	;RP0=0, select bank0
   230  037B  0613               	xorwf	main@temp_btn,w
   231  037C  1903               	btfsc	3,2
   232  037D  2B88               	goto	l1041
   233                           
   234                           ;newmain.c: 135: if (temp_btn != type){
   235                           
   236                           ;newmain.c: 134: continue;
   237  037E  0813               	movf	main@temp_btn,w
   238  037F  0614               	xorwf	_type,w	;volatile
   239  0380  1903               	skipnz
   240  0381  2B88               	goto	l1041
   241                           
   242                           ;newmain.c: 136: type = temp_btn;
   243  0382  0813               	movf	main@temp_btn,w
   244  0383  0090               	movwf	??_main
   245  0384  0810               	movf	??_main,w
   246  0385  0094               	movwf	_type	;volatile
   247                           
   248                           ;newmain.c: 137: code = 0;
   249  0386  0195               	clrf	_code	;volatile
   250                           
   251                           ;newmain.c: 138: break;
   252  0387  2B90               	goto	l1045
   253  0388                     l1041:	
   254  0388  3001               	movlw	1
   255  0389  0090               	movwf	??_main
   256  038A  0810               	movf	??_main,w
   257  038B  0792               	addwf	main@i,f
   258  038C  300A               	movlw	10
   259  038D  0212               	subwf	main@i,w
   260  038E  1C03               	skipc
   261  038F  2B6B               	goto	l1027
   262  0390                     l1045:	
   263                           
   264                           ;newmain.c: 139: }
   265                           ;newmain.c: 141: }
   266                           ;newmain.c: 142: PlaySequence(type);
   267  0390  0814               	movf	_type,w	;volatile
   268  0391  2334               	fcall	_PlaySequence
   269  0392  2B65               	goto	l73
   270  0393                     __end_of_main:	
   271                           
   272                           	psect	text1
   273  0334                     __ptext1:	
   274 ;; *************** function _PlaySequence *****************
   275 ;; Defined at:
   276 ;;		line 58 in file "newmain.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;  data            1    wreg     unsigned char 
   279 ;; Auto vars:     Size  Location     Type
   280 ;;  data            1    3[BANK0 ] unsigned char 
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMMON   BANK0
   290 ;;      Params:         0       0
   291 ;;      Locals:         0       1
   292 ;;      Temps:          0       0
   293 ;;      Totals:         0       1
   294 ;;Total ram usage:        1 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; Hardware stack levels required when called:    1
   297 ;; This function calls:
   298 ;;		_generateCode1
   299 ;;		_generateCode2
   300 ;;		_generateCode3
   301 ;;		_generateCode4
   302 ;;		_generateCode5
   303 ;; This function is called by:
   304 ;;		_main
   305 ;; This function uses a non-reentrant model
   306 ;;
   307                           
   308                           
   309                           ;psect for function _PlaySequence
   310  0334                     _PlaySequence:	
   311                           
   312                           ;incstack = 0
   313                           ; Regs used in _PlaySequence: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   314                           ;PlaySequence@data stored from wreg
   315  0334  1283               	bcf	3,5	;RP0=0, select bank0
   316  0335  008F               	movwf	PlaySequence@data
   317                           
   318                           ;newmain.c: 60: switch(data){
   319  0336  2B4D               	goto	l921
   320  0337                     l905:	
   321                           ;newmain.c: 61: case '1':
   322                           
   323                           
   324                           ;newmain.c: 62: PORTA = generateCode1();
   325  0337  22E8               	fcall	_generateCode1
   326  0338  1283               	bcf	3,5	;RP0=0, select bank0
   327  0339  0085               	movwf	5	;volatile
   328                           
   329                           ;newmain.c: 63: break;
   330  033A  0008               	return
   331  033B                     l907:	
   332                           ;newmain.c: 64: case '2':
   333                           
   334                           
   335                           ;newmain.c: 65: PORTA = generateCode2();
   336  033B  22F3               	fcall	_generateCode2
   337  033C  1283               	bcf	3,5	;RP0=0, select bank0
   338  033D  0085               	movwf	5	;volatile
   339                           
   340                           ;newmain.c: 66: break;
   341  033E  0008               	return
   342  033F                     l909:	
   343                           ;newmain.c: 67: case '3':
   344                           
   345                           
   346                           ;newmain.c: 68: PORTA = generateCode3();
   347  033F  230D               	fcall	_generateCode3
   348  0340  1283               	bcf	3,5	;RP0=0, select bank0
   349  0341  0085               	movwf	5	;volatile
   350                           
   351                           ;newmain.c: 69: break;
   352  0342  0008               	return
   353  0343                     l911:	
   354                           ;newmain.c: 70: case '5':
   355                           
   356                           
   357                           ;newmain.c: 71: PORTA = generateCode4();
   358  0343  231C               	fcall	_generateCode4
   359  0344  1283               	bcf	3,5	;RP0=0, select bank0
   360  0345  0085               	movwf	5	;volatile
   361                           
   362                           ;newmain.c: 72: break;
   363  0346  0008               	return
   364  0347                     l913:	
   365                           ;newmain.c: 73: case '6':
   366                           
   367                           
   368                           ;newmain.c: 74: PORTA = generateCode5();
   369  0347  22FF               	fcall	_generateCode5
   370  0348  1283               	bcf	3,5	;RP0=0, select bank0
   371  0349  0085               	movwf	5	;volatile
   372                           
   373                           ;newmain.c: 75: break;
   374  034A  0008               	return
   375  034B                     l915:	
   376                           ;newmain.c: 76: default:
   377                           
   378                           
   379                           ;newmain.c: 77: PORTA =0;
   380  034B  0185               	clrf	5	;volatile
   381                           
   382                           ;newmain.c: 79: }
   383                           
   384                           ;newmain.c: 78: return;
   385  034C  0008               	return
   386  034D                     l921:	
   387  034D  080F               	movf	PlaySequence@data,w
   388                           
   389                           ; Switch size 1, requested type "space"
   390                           ; Number of cases is 5, Range of values is 49 to 54
   391                           ; switch strategies available:
   392                           ; Name         Instructions Cycles
   393                           ; direct_byte           15     9 (fixed)
   394                           ; simple_byte           16     9 (average)
   395                           ; jumptable            263     9 (fixed)
   396                           ;	Chosen strategy is direct_byte
   397  034E  3ECF               	addlw	-49
   398  034F  1C03               	skipc
   399  0350  2B4B               	goto	l915
   400  0351  0084               	movwf	4
   401  0352  3006               	movlw	6
   402  0353  0204               	subwf	4,w
   403  0354  1803               	skipnc
   404  0355  2B4B               	goto	l915
   405  0356  3000               	movlw	high S1167
   406  0357  008A               	movwf	10
   407  0358  3001               	movlw	low S1167
   408  0359  0704               	addwf	4,w
   409  035A  0082               	movwf	2
   410  035B  0008               	return
   411  035C                     __end_of_PlaySequence:	
   412                           
   413                           	psect	swtext1
   414  0001                     __pswtext1:	
   415  0001                     S1167:	
   416  0001  2B37               	ljmp	l905
   417  0002  2B3B               	ljmp	l907
   418  0003  2B3F               	ljmp	l909
   419  0004  2B4B               	ljmp	l915
   420  0005  2B43               	ljmp	l911
   421  0006  2B47               	ljmp	l913
   422                           
   423                           	psect	text2
   424  02FF                     __ptext2:	
   425 ;; *************** function _generateCode5 *****************
   426 ;; Defined at:
   427 ;;		line 50 in file "newmain.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;		None
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      unsigned char 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMMON   BANK0
   441 ;;      Params:         0       0
   442 ;;      Locals:         0       0
   443 ;;      Temps:          0       2
   444 ;;      Totals:         0       2
   445 ;;Total ram usage:        2 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; This function calls:
   448 ;;		Nothing
   449 ;; This function is called by:
   450 ;;		_PlaySequence
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           
   454                           
   455                           ;psect for function _generateCode5
   456  02FF                     _generateCode5:	
   457                           
   458                           ;newmain.c: 51: if (code&0b1000)
   459                           
   460                           ;incstack = 0
   461                           ; Regs used in _generateCode5: [wreg+status,2+status,0]
   462  02FF  1283               	bcf	3,5	;RP0=0, select bank0
   463  0300  1D95               	btfss	_code,3	;volatile
   464  0301  2B09               	goto	l897
   465                           
   466                           ;newmain.c: 52: code = code<<1;
   467  0302  0815               	movf	_code,w	;volatile
   468  0303  008C               	movwf	??_generateCode5
   469  0304  070C               	addwf	??_generateCode5,w
   470  0305  008D               	movwf	??_generateCode5+1
   471  0306  080D               	movf	??_generateCode5+1,w
   472  0307  0095               	movwf	_code	;volatile
   473  0308  2B0B               	goto	l899
   474  0309                     l897:	
   475                           
   476                           ;newmain.c: 53: else
   477                           ;newmain.c: 54: code = (code<<1 )+1;
   478  0309  1403               	setc
   479  030A  0D95               	rlf	_code,f	;volatile
   480  030B                     l899:	
   481                           
   482                           ;newmain.c: 55: return code;
   483  030B  0815               	movf	_code,w	;volatile
   484  030C  0008               	return
   485  030D                     __end_of_generateCode5:	
   486                           
   487                           	psect	text3
   488  031C                     __ptext3:	
   489 ;; *************** function _generateCode4 *****************
   490 ;; Defined at:
   491 ;;		line 42 in file "newmain.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;  res             1    2[BANK0 ] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      unsigned char 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0
   505 ;;      Params:         0       0
   506 ;;      Locals:         0       1
   507 ;;      Temps:          0       2
   508 ;;      Totals:         0       3
   509 ;;Total ram usage:        3 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; This function calls:
   512 ;;		Nothing
   513 ;; This function is called by:
   514 ;;		_PlaySequence
   515 ;; This function uses a non-reentrant model
   516 ;;
   517                           
   518                           
   519                           ;psect for function _generateCode4
   520  031C                     _generateCode4:	
   521                           
   522                           ;newmain.c: 43: uint8_t res = (1<<code);
   523                           
   524                           ;incstack = 0
   525                           ; Regs used in _generateCode4: [wreg+status,2+status,0]
   526  031C  3001               	movlw	1
   527  031D  1283               	bcf	3,5	;RP0=0, select bank0
   528  031E  008C               	movwf	??_generateCode4
   529  031F  0A15               	incf	_code,w	;volatile
   530  0320  2B23               	goto	u144
   531  0321                     u145:	
   532  0321  1003               	clrc
   533  0322  0D8C               	rlf	??_generateCode4,f
   534  0323                     u144:	
   535  0323  3EFF               	addlw	-1
   536  0324  1D03               	skipz
   537  0325  2B21               	goto	u145
   538  0326  080C               	movf	??_generateCode4,w
   539  0327  008D               	movwf	??_generateCode4+1
   540  0328  080D               	movf	??_generateCode4+1,w
   541  0329  008E               	movwf	generateCode4@res
   542                           
   543                           ;newmain.c: 44: code++;
   544  032A  3001               	movlw	1
   545  032B  008C               	movwf	??_generateCode4
   546  032C  080C               	movf	??_generateCode4,w
   547  032D  0795               	addwf	_code,f	;volatile
   548                           
   549                           ;newmain.c: 45: if (code>3)
   550  032E  3004               	movlw	4
   551  032F  0215               	subwf	_code,w	;volatile
   552  0330  1803               	btfsc	3,0
   553                           
   554                           ;newmain.c: 46: code=0;
   555  0331  0195               	clrf	_code	;volatile
   556                           
   557                           ;newmain.c: 48: return res;
   558  0332  080E               	movf	generateCode4@res,w
   559  0333  0008               	return
   560  0334                     __end_of_generateCode4:	
   561                           
   562                           	psect	text4
   563  030D                     __ptext4:	
   564 ;; *************** function _generateCode3 *****************
   565 ;; Defined at:
   566 ;;		line 36 in file "newmain.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      unsigned char 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0
   580 ;;      Params:         0       0
   581 ;;      Locals:         0       0
   582 ;;      Temps:          0       1
   583 ;;      Totals:         0       1
   584 ;;Total ram usage:        1 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_PlaySequence
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _generateCode3
   595  030D                     _generateCode3:	
   596                           
   597                           ;newmain.c: 37: code++;
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _generateCode3: [wreg+status,2+status,0]
   601  030D  3001               	movlw	1
   602  030E  1283               	bcf	3,5	;RP0=0, select bank0
   603  030F  008C               	movwf	??_generateCode3
   604  0310  080C               	movf	??_generateCode3,w
   605  0311  0795               	addwf	_code,f	;volatile
   606                           
   607                           ;newmain.c: 38: if (code == 16)
   608  0312  3010               	movlw	16
   609  0313  0615               	xorwf	_code,w	;volatile
   610  0314  1903               	btfsc	3,2
   611                           
   612                           ;newmain.c: 39: code = 0;
   613  0315  0195               	clrf	_code	;volatile
   614                           
   615                           ;newmain.c: 40: return code^(code>>1);
   616  0316  0815               	movf	_code,w	;volatile
   617  0317  008C               	movwf	??_generateCode3
   618  0318  1003               	clrc
   619  0319  0C0C               	rrf	??_generateCode3,w
   620  031A  0615               	xorwf	_code,w	;volatile
   621  031B  0008               	return
   622  031C                     __end_of_generateCode3:	
   623                           
   624                           	psect	text5
   625  02F3                     __ptext5:	
   626 ;; *************** function _generateCode2 *****************
   627 ;; Defined at:
   628 ;;		line 29 in file "newmain.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0
   642 ;;      Params:         0       0
   643 ;;      Locals:         0       0
   644 ;;      Temps:          0       1
   645 ;;      Totals:         0       1
   646 ;;Total ram usage:        1 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_PlaySequence
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _generateCode2
   657  02F3                     _generateCode2:	
   658                           
   659                           ;newmain.c: 31: if (code == 0)
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _generateCode2: [wreg+status,2+status,0]
   663  02F3  1283               	bcf	3,5	;RP0=0, select bank0
   664  02F4  0815               	movf	_code,w	;volatile
   665  02F5  1D03               	btfss	3,2
   666  02F6  2AFB               	goto	l869
   667                           
   668                           ;newmain.c: 32: code = 0b10000;
   669  02F7  3010               	movlw	16
   670  02F8  008C               	movwf	??_generateCode2
   671  02F9  080C               	movf	??_generateCode2,w
   672  02FA  0095               	movwf	_code	;volatile
   673  02FB                     l869:	
   674                           
   675                           ;newmain.c: 33: code--;
   676  02FB  3001               	movlw	1
   677  02FC  0295               	subwf	_code,f	;volatile
   678                           
   679                           ;newmain.c: 34: return code;
   680  02FD  0815               	movf	_code,w	;volatile
   681  02FE  0008               	return
   682  02FF                     __end_of_generateCode2:	
   683                           
   684                           	psect	text6
   685  02E8                     __ptext6:	
   686 ;; *************** function _generateCode1 *****************
   687 ;; Defined at:
   688 ;;		line 23 in file "newmain.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      unsigned char 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0
   702 ;;      Params:         0       0
   703 ;;      Locals:         0       0
   704 ;;      Temps:          0       1
   705 ;;      Totals:         0       1
   706 ;;Total ram usage:        1 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_PlaySequence
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           
   716                           ;psect for function _generateCode1
   717  02E8                     _generateCode1:	
   718                           
   719                           ;newmain.c: 24: code++;
   720                           
   721                           ;incstack = 0
   722                           ; Regs used in _generateCode1: [wreg+status,2+status,0]
   723  02E8  3001               	movlw	1
   724  02E9  1283               	bcf	3,5	;RP0=0, select bank0
   725  02EA  008C               	movwf	??_generateCode1
   726  02EB  080C               	movf	??_generateCode1,w
   727  02EC  0795               	addwf	_code,f	;volatile
   728                           
   729                           ;newmain.c: 25: if (code > 0b1111)
   730  02ED  3010               	movlw	16
   731  02EE  0215               	subwf	_code,w	;volatile
   732  02EF  1803               	btfsc	3,0
   733                           
   734                           ;newmain.c: 26: code = 0;
   735  02F0  0195               	clrf	_code	;volatile
   736                           
   737                           ;newmain.c: 27: return code;
   738  02F1  0815               	movf	_code,w	;volatile
   739  02F2  0008               	return
   740  02F3                     __end_of_generateCode1:	
   741                           
   742                           	psect	text7
   743  0393                     __ptext7:	
   744 ;; *************** function _CaptureKey *****************
   745 ;; Defined at:
   746 ;;		line 82 in file "newmain.c"
   747 ;; Parameters:    Size  Location     Type
   748 ;;		None
   749 ;; Auto vars:     Size  Location     Type
   750 ;;		None
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      unsigned char 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   755 ;; Tracked objects:
   756 ;;		On entry : 0/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0
   760 ;;      Params:         0       0
   761 ;;      Locals:         0       0
   762 ;;      Temps:          0       2
   763 ;;      Totals:         0       2
   764 ;;Total ram usage:        2 bytes
   765 ;; Hardware stack levels used:    1
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_main
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _CaptureKey
   775  0393                     _CaptureKey:	
   776                           
   777                           ;newmain.c: 84: PORTB = 0x04;
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in _CaptureKey: [wreg-fsr0h+status,2+status,0]
   781  0393  3004               	movlw	4
   782  0394  1283               	bcf	3,5	;RP0=0, select bank0
   783  0395  0086               	movwf	6	;volatile
   784                           
   785                           ;newmain.c: 85: switch(PORTB & 0xF0){
   786  0396  2B9F               	goto	l949
   787  0397                     l931:	
   788                           ;newmain.c: 86: case 0x10:
   789                           
   790                           
   791                           ;newmain.c: 87: return '1';
   792  0397  3031               	movlw	49
   793  0398  0008               	return
   794  0399                     l935:	
   795                           ;newmain.c: 88: case 0x20:
   796                           
   797                           
   798                           ;newmain.c: 89: return '4';
   799  0399  3034               	movlw	52
   800  039A  0008               	return
   801  039B                     l939:	
   802                           ;newmain.c: 90: case 0x40:
   803                           
   804                           
   805                           ;newmain.c: 91: return '7';
   806  039B  3037               	movlw	55
   807  039C  0008               	return
   808  039D                     l943:	
   809                           ;newmain.c: 92: case 0x80:
   810                           
   811                           
   812                           ;newmain.c: 93: return '*';
   813  039D  302A               	movlw	42
   814  039E  0008               	return
   815  039F                     l949:	
   816                           ;newmain.c: 94: }
   817                           
   818  039F  0806               	movf	6,w	;volatile
   819  03A0  39F0               	andlw	240
   820  03A1  008C               	movwf	??_CaptureKey
   821  03A2  018D               	clrf	??_CaptureKey+1
   822                           
   823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   824                           ; Switch size 1, requested type "space"
   825                           ; Number of cases is 1, Range of values is 0 to 0
   826                           ; switch strategies available:
   827                           ; Name         Instructions Cycles
   828                           ; simple_byte            4     3 (average)
   829                           ; direct_byte            7     6 (fixed)
   830                           ; jumptable            260     6 (fixed)
   831                           ;	Chosen strategy is simple_byte
   832  03A3  080D               	movf	??_CaptureKey+1,w
   833  03A4  3A00               	xorlw	0	; case 0
   834  03A5  1903               	skipnz
   835  03A6  2BA8               	goto	l1169
   836  03A7  2BB6               	goto	l951
   837  03A8                     l1169:	
   838                           
   839                           ; Switch size 1, requested type "space"
   840                           ; Number of cases is 4, Range of values is 16 to 128
   841                           ; switch strategies available:
   842                           ; Name         Instructions Cycles
   843                           ; simple_byte           13     7 (average)
   844                           ; direct_byte          122     9 (fixed)
   845                           ; jumptable            263     9 (fixed)
   846                           ;	Chosen strategy is simple_byte
   847  03A8  080C               	movf	??_CaptureKey,w
   848  03A9  3A10               	xorlw	16	; case 16
   849  03AA  1903               	skipnz
   850  03AB  2B97               	goto	l931
   851  03AC  3A30               	xorlw	48	; case 32
   852  03AD  1903               	skipnz
   853  03AE  2B99               	goto	l935
   854  03AF  3A60               	xorlw	96	; case 64
   855  03B0  1903               	skipnz
   856  03B1  2B9B               	goto	l939
   857  03B2  3AC0               	xorlw	192	; case 128
   858  03B3  1903               	skipnz
   859  03B4  2B9D               	goto	l943
   860  03B5  2BB6               	goto	l951
   861  03B6                     l951:	
   862                           
   863                           ;newmain.c: 95: PORTB = 0x02;
   864  03B6  3002               	movlw	2
   865  03B7  0086               	movwf	6	;volatile
   866                           
   867                           ;newmain.c: 96: switch(PORTB & 0xF0){
   868  03B8  2BC1               	goto	l971
   869  03B9                     l953:	
   870                           ;newmain.c: 97: case 0x10:
   871                           
   872                           
   873                           ;newmain.c: 98: return '2';
   874  03B9  3032               	movlw	50
   875  03BA  0008               	return
   876  03BB                     l957:	
   877                           ;newmain.c: 99: case 0x20:
   878                           
   879                           
   880                           ;newmain.c: 100: return '5';
   881  03BB  3035               	movlw	53
   882  03BC  0008               	return
   883  03BD                     l961:	
   884                           ;newmain.c: 101: case 0x40:
   885                           
   886                           
   887                           ;newmain.c: 102: return '8';
   888  03BD  3038               	movlw	56
   889  03BE  0008               	return
   890  03BF                     l965:	
   891                           ;newmain.c: 103: case 0x80:
   892                           
   893                           
   894                           ;newmain.c: 104: return '0';
   895  03BF  3030               	movlw	48
   896  03C0  0008               	return
   897  03C1                     l971:	
   898                           ;newmain.c: 105: }
   899                           
   900  03C1  0806               	movf	6,w	;volatile
   901  03C2  39F0               	andlw	240
   902  03C3  008C               	movwf	??_CaptureKey
   903  03C4  018D               	clrf	??_CaptureKey+1
   904                           
   905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   906                           ; Switch size 1, requested type "space"
   907                           ; Number of cases is 1, Range of values is 0 to 0
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            4     3 (average)
   911                           ; direct_byte            7     6 (fixed)
   912                           ; jumptable            260     6 (fixed)
   913                           ;	Chosen strategy is simple_byte
   914  03C5  080D               	movf	??_CaptureKey+1,w
   915  03C6  3A00               	xorlw	0	; case 0
   916  03C7  1903               	skipnz
   917  03C8  2BCA               	goto	l1171
   918  03C9  2BD8               	goto	l973
   919  03CA                     l1171:	
   920                           
   921                           ; Switch size 1, requested type "space"
   922                           ; Number of cases is 4, Range of values is 16 to 128
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte           13     7 (average)
   926                           ; direct_byte          122     9 (fixed)
   927                           ; jumptable            263     9 (fixed)
   928                           ;	Chosen strategy is simple_byte
   929  03CA  080C               	movf	??_CaptureKey,w
   930  03CB  3A10               	xorlw	16	; case 16
   931  03CC  1903               	skipnz
   932  03CD  2BB9               	goto	l953
   933  03CE  3A30               	xorlw	48	; case 32
   934  03CF  1903               	skipnz
   935  03D0  2BBB               	goto	l957
   936  03D1  3A60               	xorlw	96	; case 64
   937  03D2  1903               	skipnz
   938  03D3  2BBD               	goto	l961
   939  03D4  3AC0               	xorlw	192	; case 128
   940  03D5  1903               	skipnz
   941  03D6  2BBF               	goto	l965
   942  03D7  2BD8               	goto	l973
   943  03D8                     l973:	
   944                           
   945                           ;newmain.c: 106: PORTB = 0x01;
   946  03D8  3001               	movlw	1
   947  03D9  0086               	movwf	6	;volatile
   948                           
   949                           ;newmain.c: 107: switch(PORTB & 0xF0){
   950  03DA  2BE3               	goto	l993
   951  03DB                     l975:	
   952                           ;newmain.c: 108: case 0x10:
   953                           
   954                           
   955                           ;newmain.c: 109: return '3';
   956  03DB  3033               	movlw	51
   957  03DC  0008               	return
   958  03DD                     l979:	
   959                           ;newmain.c: 110: case 0x20:
   960                           
   961                           
   962                           ;newmain.c: 111: return '6';
   963  03DD  3036               	movlw	54
   964  03DE  0008               	return
   965  03DF                     l983:	
   966                           ;newmain.c: 112: case 0x40:
   967                           
   968                           
   969                           ;newmain.c: 113: return '9';
   970  03DF  3039               	movlw	57
   971  03E0  0008               	return
   972  03E1                     l987:	
   973                           ;newmain.c: 114: case 0x80:
   974                           
   975                           
   976                           ;newmain.c: 115: return '#';
   977  03E1  3023               	movlw	35
   978  03E2  0008               	return
   979  03E3                     l993:	
   980                           ;newmain.c: 116: }
   981                           
   982  03E3  0806               	movf	6,w	;volatile
   983  03E4  39F0               	andlw	240
   984  03E5  008C               	movwf	??_CaptureKey
   985  03E6  018D               	clrf	??_CaptureKey+1
   986                           
   987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   988                           ; Switch size 1, requested type "space"
   989                           ; Number of cases is 1, Range of values is 0 to 0
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            4     3 (average)
   993                           ; direct_byte            7     6 (fixed)
   994                           ; jumptable            260     6 (fixed)
   995                           ;	Chosen strategy is simple_byte
   996  03E7  080D               	movf	??_CaptureKey+1,w
   997  03E8  3A00               	xorlw	0	; case 0
   998  03E9  1903               	skipnz
   999  03EA  2BEC               	goto	l1173
  1000  03EB  2BFA               	goto	l995
  1001  03EC                     l1173:	
  1002                           
  1003                           ; Switch size 1, requested type "space"
  1004                           ; Number of cases is 4, Range of values is 16 to 128
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte           13     7 (average)
  1008                           ; direct_byte          122     9 (fixed)
  1009                           ; jumptable            263     9 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011  03EC  080C               	movf	??_CaptureKey,w
  1012  03ED  3A10               	xorlw	16	; case 16
  1013  03EE  1903               	skipnz
  1014  03EF  2BDB               	goto	l975
  1015  03F0  3A30               	xorlw	48	; case 32
  1016  03F1  1903               	skipnz
  1017  03F2  2BDD               	goto	l979
  1018  03F3  3A60               	xorlw	96	; case 64
  1019  03F4  1903               	skipnz
  1020  03F5  2BDF               	goto	l983
  1021  03F6  3AC0               	xorlw	192	; case 128
  1022  03F7  1903               	skipnz
  1023  03F8  2BE1               	goto	l987
  1024  03F9  2BFA               	goto	l995
  1025  03FA                     l995:	
  1026                           
  1027                           ;newmain.c: 117: return 0xAA;
  1028  03FA  30AA               	movlw	170
  1029  03FB  0008               	return
  1030  03FC                     __end_of_CaptureKey:	
  1031  004E                     btemp	set	78	;btemp
  1032  004E                     wtemp	set	78
  1033  004E                     wtemp0	set	78
  1034  0050                     wtemp1	set	80
  1035  0052                     wtemp2	set	82
  1036  0054                     wtemp3	set	84
  1037  0056                     wtemp4	set	86
  1038  0058                     wtemp5	set	88
  1039  004F                     wtemp6	set	79
  1040  004E                     ttemp	set	78
  1041  004E                     ttemp0	set	78
  1042  0051                     ttemp1	set	81
  1043  0054                     ttemp2	set	84
  1044  0057                     ttemp3	set	87
  1045  004F                     ttemp4	set	79
  1046  004E                     ltemp	set	78
  1047  004E                     ltemp0	set	78
  1048  0052                     ltemp1	set	82
  1049  0056                     ltemp2	set	86
  1050  0050                     ltemp3	set	80


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      8      10

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_PlaySequence
    _PlaySequence->_generateCode4

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     158
                                              4 BANK0      4     4      0
                         _CaptureKey
                       _PlaySequence
 ---------------------------------------------------------------------------------
 (1) _PlaySequence                                         1     1      0      45
                                              3 BANK0      1     1      0
                      _generateCode1
                      _generateCode2
                      _generateCode3
                      _generateCode4
                      _generateCode5
 ---------------------------------------------------------------------------------
 (2) _generateCode5                                        2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _generateCode4                                        3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _generateCode3                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _generateCode2                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _generateCode1                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _CaptureKey                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CaptureKey
   _PlaySequence
     _generateCode1
     _generateCode2
     _generateCode3
     _generateCode4
     _generateCode5

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      8       A       3       15.2%
ABS                  0      0       A       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       A       6        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 24 18:54:20 2016

                      pc 0002                       l73 0365                       fsr 0004  
                    l911 0343                      l913 0347                      l905 0337  
                    l921 034D                      l931 0397                      l915 034B  
                    l907 033B                      l909 033F                      l951 03B6  
                    l943 039D                      l935 0399                      l961 03BD  
                    l953 03B9                      l971 03C1                      l939 039B  
                    l973 03D8                      l965 03BF                      l957 03BB  
                    l949 039F                      l869 02FB                      l983 03DF  
                    l975 03DB                      l993 03E3                      l897 0309  
                    l995 03FA                      l987 03E1                      l979 03DD  
                    l899 030B                      u144 0323                      u145 0321  
                    u217 0374                     S1167 0001                     l1041 0388  
                   l1027 036B                     l1045 0390                     l1171 03CA  
                   l1173 03EC                     l1169 03A8                     _code 0015  
                   _main 035C                     btemp 004E                     _type 0014  
                   ltemp 004E                     start 0000                     ttemp 004E  
                   wtemp 004E               _CaptureKey 0393          ??_generateCode1 000C  
        ??_generateCode2 000C          ??_generateCode3 000C          ??_generateCode4 000C  
        ??_generateCode5 000C                    ?_main 000C                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
           main@temp_btn 0013                    main@i 0012                    pclath 000A  
                  ltemp0 004E                    ltemp1 0052                    ltemp2 0056  
                  ltemp3 0050                    ttemp0 004E                    ttemp1 0051  
                  ttemp2 0054                    ttemp3 0057                    ttemp4 004F  
                  status 0003                    wtemp0 004E                    wtemp1 0050  
                  wtemp2 0052                    wtemp3 0054                    wtemp4 0056  
                  wtemp5 0058                    wtemp6 004F          __initialization 03FC  
           __end_of_main 0393                   ??_main 0010              ?_CaptureKey 000C  
          ?_PlaySequence 000C  __end_of__initialization 03FE           __pcstackCOMMON 0000  
         ??_PlaySequence 0000      __size_of_CaptureKey 0069         generateCode4@res 000E  
             __pbssBANK0 0014               __pmaintext 035C    __end_of_generateCode1 02F3  
  __end_of_generateCode2 02FF    __end_of_generateCode3 031C    __end_of_generateCode4 0334  
  __end_of_generateCode5 030D                  __ptext1 0334                  __ptext2 02FF  
                __ptext3 031C                  __ptext4 030D                  __ptext5 02F3  
                __ptext6 02E8                  __ptext7 0393     end_of_initialization 03FE  
           ??_CaptureKey 000C     __end_of_PlaySequence 035C       __end_of_CaptureKey 03FC  
    start_initialization 03FC                ___latbits 0000            __pcstackBANK0 000C  
       PlaySequence@data 000F    __size_of_PlaySequence 0028                __pswtext1 0001  
           _PlaySequence 0334   __size_of_generateCode1 000B   __size_of_generateCode2 000C  
 __size_of_generateCode3 000F   __size_of_generateCode4 0018   __size_of_generateCode5 000E  
          __size_of_main 0037            _generateCode1 02E8            _generateCode2 02F3  
          _generateCode3 030D            _generateCode4 031C            _generateCode5 02FF  
         ?_generateCode1 000C           ?_generateCode2 000C           ?_generateCode3 000C  
         ?_generateCode4 000C           ?_generateCode5 000C  
