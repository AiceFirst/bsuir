Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.41\dat\en_msgs.txt -cs \
  -h+dist/XC8_PIC16F54/production\lab1.X.production.sym \
  --cmf=dist/XC8_PIC16F54/production\lab1.X.production.cmf -z -Q16F84A \
  -oC:\Users\Antonio\AppData\Local\Temp\s4dc.2 \
  -Mdist/XC8_PIC16F54/production/lab1.X.production.map -E1 -ver=XC8 \
  -ASTACK=010h-04dh -pstack=STACK -ACODE=00h-03FFh -ASTRCODE=00h-03FFh \
  -ASTRING=00h-0FFhx4 -ACONST=00h-0FFhx4 -AENTRY=00h-0FFhx4 \
  -ABANK0=0Ch-04Dh -ARAM=0Ch-04Dh -AABS1=0Ch-04Fh -ACOMMON=04Eh-04Fh \
  -ASFR0=00h-0Bh -ASFR1=080h-0CDh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-03Fh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Antonio\AppData\Local\Temp\s4dc.obj \
  dist/XC8_PIC16F54/production\lab1.X.production.obj \
  build/XC8_PIC16F54/production/newAsmTemplate.obj 

Object code version is 3.11

Machine type is 16F84A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Antonio\AppData\Local\Temp\s4dc.obj
                end_init                              F        F        1        8       0
                reset_vec                             0        0        1        0       0
dist/XC8_PIC16F54/production\lab1.X.production.obj
                cinit                                10       10        2        8       0
                intentry                              4        4        B        8       0
                text1                                12       12        B        8       0
                maintext                             1D       1D        9        8       0
                cstackBANK0                           C        C        4        C       1
build/XC8_PIC16F54/production/newAsmTemplate.obj
                bssASM                                0        0        8        0       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              F        F        1         0
                cinit                                10       10        2         0
                intentry                              4        4        B         0
                reset_vec                             0        0        1         0
                text1                                12       12        B         0
                maintext                             1D       1D        9         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   BANK0          
                cstackBANK0                           C        C        4         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               4E       4E        2         1

        CLASS   COMMON         

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   CONFIG         

        CLASS   IDLOC          

        CLASS   EEDATA         

        CLASS   BANK1          
                bssASM                                0        0        8         1



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  000022  000026         8       0  CODE        2
                cstackBANK0                    00000C  000004  000010         C       1  BANK0       1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            10-4D           3E           1
        CODE             01-03            3           2
                         26-3FF          3DA
        CONFIG           2007-2007            1           2
        CONST            01-03            3           2
                         26-3FF          100
        EEDATA           2100-213F           40           2
        ENTRY            01-03            3           2
                         26-3FF          100
        IDLOC            2000-2003            4           2
        RAM              10-4D           3E           1
        SFR0             08-0B            4           1
        SFR1             80-CD           4E           1
        STACK            10-4D           3E           1
        STRCODE          01-03            3           2
                         26-3FF          3DA
        STRING           01-03            3           2
                         26-3FF          100

                                  Symbol Table

_PORTB                   (abs)        06
_TRISA                   (abs)        85
_TRISB                   (abs)        86
__Habs1                  abs1         00
__Hbank0                 bank0        00
__Hbank1                 bank1        00
__HbssASM                bssASM       08
__Hcinit                 cinit        12
__Hclrtext               clrtext      00
__Hcode                  code         00
__Hcommon                common       00
__Hconfig                config       00
__HcstackBANK0           cstackBANK0  00
__HcstackCOMMON          cstackCOMMON 00
__Heeprom_data           eeprom_data  00
__Hend_init              end_init     10
__Hfunctab               functab      00
__Hidloc                 idloc        00
__Hinit                  init         0F
__Hintentry              intentry     0F
__Hmaintext              maintext     00
__Hpowerup               powerup      00
__Hram                   ram          00
__Hreset_vec             reset_vec    01
__Hsfr0                  sfr0         00
__Hsfr1                  sfr1         00
__Hspace_0               (abs)        26
__Hspace_1               (abs)        10
__Hspace_2               (abs)        00
__Hspace_3               (abs)        00
__Hstack                 stack        00
__Hstrings               strings      00
__Htext                  text         00
__Labs1                  abs1         00
__Lbank0                 bank0        00
__Lbank1                 bank1        00
__LbssASM                bssASM       00
__Lcinit                 cinit        10
__Lclrtext               clrtext      00
__Lcode                  code         00
__Lcommon                common       00
__Lconfig                config       00
__LcstackBANK0           cstackBANK0  00
__LcstackCOMMON          cstackCOMMON 00
__Leeprom_data           eeprom_data  00
__Lend_init              end_init     0F
__Lfunctab               functab      00
__Lidloc                 idloc        00
__Linit                  init         0F
__Lintentry              intentry     04
__Lmaintext              maintext     00
__Lpowerup               powerup      00
__Lram                   ram          00
__Lreset_vec             reset_vec    00
__Lsfr0                  sfr0         00
__Lsfr1                  sfr1         00
__Lspace_0               (abs)        00
__Lspace_1               (abs)        00
__Lspace_2               (abs)        00
__Lspace_3               (abs)        00
__Lstack                 stack        00
__Lstrings               strings      00
__Ltext                  text         00
__S0                     (abs)        26
__S1                     (abs)        10
__S2                     (abs)        00
__S3                     (abs)        00
___int_sp                stack        00
___latbits               (abs)        00
___sp                    stack        00
__end_of__initialization cinit        10
__end_of_isr             text1        1D
__end_of_main            maintext     26
__initialization         cinit        10
__pcstackBANK0           cstackBANK0  0C
__pcstackCOMMON          cstackCOMMON 00
__pintentry              intentry     04
__pmaintext              maintext     1D
__ptext1                 text1        12
__size_of_isr            (abs)        00
__size_of_main           (abs)        00
_isr                     text1        12
_main                    maintext     1D
btemp                    (abs)        4E
end_of_initialization    cinit        10
interrupt_function       intentry     04
intlevel0                functab      00
intlevel1                functab      00
intlevel2                functab      00
intlevel3                functab      00
intlevel4                functab      00
intlevel5                functab      00
reset_vec                reset_vec    00
saved_w                  (abs)        4E
stackhi                  (abs)        00
stacklo                  (abs)        00
start                    init         0F
start_initialization     cinit        10
wtemp0                   (abs)        4E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 26 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       0
      Totals:         0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 23 in file "interrupts.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0
      Params:         0       0
      Locals:         0       0
      Temps:          0       4
      Totals:         0       4
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
interrupts.c
		_isr           		CODE           	0012	0000	12

interrupts.c estimated size: 12

shared
		__initialization		CODE           	0010	0000	1

shared estimated size: 1

main.c
		_main          		CODE           	001D	0000	10

main.c estimated size: 10

