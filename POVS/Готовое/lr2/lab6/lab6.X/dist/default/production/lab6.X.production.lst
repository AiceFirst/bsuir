

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Dec 05 17:25:07 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F84A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	dabs	1,0x4E,2
     9  0000                     	;# 
    10  0001                     	;# 
    11  0002                     	;# 
    12  0003                     	;# 
    13  0004                     	;# 
    14  0005                     	;# 
    15  0006                     	;# 
    16  0008                     	;# 
    17  0009                     	;# 
    18  000A                     	;# 
    19  000B                     	;# 
    20  0081                     	;# 
    21  0085                     	;# 
    22  0086                     	;# 
    23  0088                     	;# 
    24  0089                     	;# 
    25  0005                     _PORTA	set	5
    26  0006                     _PORTB	set	6
    27  0085                     _TRISA	set	133
    28  0086                     _TRISB	set	134
    29                           
    30                           	psect	cinit
    31  03FE                     start_initialization:	
    32                           ; #config settings
    33                           
    34  03FE                     __initialization:	
    35  03FE                     end_of_initialization:	
    36                           ;End of C runtime variable initialization code
    37                           
    38  03FE                     __end_of__initialization:	
    39  03FE  0183               	clrf	3
    40  03FF  2B63               	ljmp	_main	;jump to C main() function
    41                           
    42                           	psect	cstackBANK0
    43  000C                     __pcstackBANK0:	
    44  000C                     ?_CaptureKey:	
    45  000C                     ??_CaptureKey:	
    46                           ; 1 bytes @ 0x0
    47                           
    48  000C                     ?_main:	
    49                           ; 1 bytes @ 0x0
    50                           
    51                           
    52                           ; 1 bytes @ 0x0
    53  000C                     	ds	2
    54  000E                     ??_main:	
    55                           
    56                           ; 1 bytes @ 0x2
    57  000E                     	ds	1
    58  000F                     main@temp:	
    59                           
    60                           ; 1 bytes @ 0x3
    61  000F                     	ds	1
    62  0010                     main@porta:	
    63                           
    64                           ; 1 bytes @ 0x4
    65  0010                     	ds	1
    66                           
    67                           	psect	maintext
    68  0363                     __pmaintext:	
    69 ;;
    70 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    71 ;;
    72 ;; *************** function _main *****************
    73 ;; Defined at:
    74 ;;		line 68 in file "newmain.c"
    75 ;; Parameters:    Size  Location     Type
    76 ;;		None
    77 ;; Auto vars:     Size  Location     Type
    78 ;;  porta           1    4[BANK0 ] unsigned char 
    79 ;;  temp            1    3[BANK0 ] unsigned char 
    80 ;; Return value:  Size  Location     Type
    81 ;;                  1    wreg      void 
    82 ;; Registers used:
    83 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
    84 ;; Tracked objects:
    85 ;;		On entry : B00/0
    86 ;;		On exit  : 0/0
    87 ;;		Unchanged: 0/0
    88 ;; Data sizes:     COMMON   BANK0
    89 ;;      Params:         0       0
    90 ;;      Locals:         0       2
    91 ;;      Temps:          0       1
    92 ;;      Totals:         0       3
    93 ;;Total ram usage:        3 bytes
    94 ;; Hardware stack levels required when called:    1
    95 ;; This function calls:
    96 ;;		_CaptureKey
    97 ;; This function is called by:
    98 ;;		Startup code after reset
    99 ;; This function uses a non-reentrant model
   100 ;;
   101                           
   102                           
   103                           ;psect for function _main
   104  0363                     _main:	
   105                           
   106                           ;newmain.c: 70: TRISA = 0xF0;
   107                           
   108                           ;incstack = 0
   109                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   110  0363  30F0               	movlw	240
   111  0364  1683               	bsf	3,5	;RP0=1, select bank1
   112  0365  0085               	movwf	5	;volatile
   113                           
   114                           ;newmain.c: 71: TRISB = 0xF8;
   115  0366  30F8               	movlw	248
   116  0367  0086               	movwf	6	;volatile
   117                           
   118                           ;newmain.c: 72: PORTA = 0x00;
   119  0368  1283               	bcf	3,5	;RP0=0, select bank0
   120  0369  0185               	clrf	5	;volatile
   121                           
   122                           ;newmain.c: 73: PORTB = 0x07;
   123  036A  3007               	movlw	7
   124  036B  0086               	movwf	6	;volatile
   125                           
   126                           ;newmain.c: 75: uint8_t temp,porta = 0;
   127  036C  0190               	clrf	main@porta
   128  036D                     l807:	
   129                           ;newmain.c: 76: while(1)
   130                           
   131                           
   132                           ;newmain.c: 77: {
   133                           ;newmain.c: 78: temp = CaptureKey();
   134  036D  2385               	fcall	_CaptureKey
   135  036E  1283               	bcf	3,5	;RP0=0, select bank0
   136  036F  008E               	movwf	??_main
   137  0370  080E               	movf	??_main,w
   138  0371  008F               	movwf	main@temp
   139                           
   140                           ;newmain.c: 79: if (temp == 0xAA) temp = porta;
   141  0372  30AA               	movlw	170
   142  0373  060F               	xorwf	main@temp,w
   143  0374  1D03               	btfss	3,2
   144  0375  2B7A               	goto	l57
   145  0376  0810               	movf	main@porta,w
   146  0377  008E               	movwf	??_main
   147  0378  080E               	movf	??_main,w
   148  0379  008F               	movwf	main@temp
   149  037A                     l57:	
   150                           
   151                           ;newmain.c: 80: if (porta != temp){
   152  037A  0810               	movf	main@porta,w
   153  037B  060F               	xorwf	main@temp,w
   154  037C  1903               	skipnz
   155  037D  2B6D               	goto	l807
   156                           
   157                           ;newmain.c: 81: porta = temp;
   158  037E  080F               	movf	main@temp,w
   159  037F  008E               	movwf	??_main
   160  0380  080E               	movf	??_main,w
   161  0381  0090               	movwf	main@porta
   162                           
   163                           ;newmain.c: 82: PORTA = porta;
   164  0382  0810               	movf	main@porta,w
   165  0383  0085               	movwf	5	;volatile
   166  0384  2B6D               	goto	l807
   167  0385                     __end_of_main:	
   168                           
   169                           	psect	text1
   170  0385                     __ptext1:	
   171 ;; *************** function _CaptureKey *****************
   172 ;; Defined at:
   173 ;;		line 18 in file "newmain.c"
   174 ;; Parameters:    Size  Location     Type
   175 ;;		None
   176 ;; Auto vars:     Size  Location     Type
   177 ;;		None
   178 ;; Return value:  Size  Location     Type
   179 ;;                  1    wreg      unsigned char 
   180 ;; Registers used:
   181 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   182 ;; Tracked objects:
   183 ;;		On entry : 0/0
   184 ;;		On exit  : 0/0
   185 ;;		Unchanged: 0/0
   186 ;; Data sizes:     COMMON   BANK0
   187 ;;      Params:         0       0
   188 ;;      Locals:         0       0
   189 ;;      Temps:          0       2
   190 ;;      Totals:         0       2
   191 ;;Total ram usage:        2 bytes
   192 ;; Hardware stack levels used:    1
   193 ;; This function calls:
   194 ;;		Nothing
   195 ;; This function is called by:
   196 ;;		_main
   197 ;; This function uses a non-reentrant model
   198 ;;
   199                           
   200                           
   201                           ;psect for function _CaptureKey
   202  0385                     _CaptureKey:	
   203                           
   204                           ;newmain.c: 20: PORTB = 0x04;
   205                           
   206                           ;incstack = 0
   207                           ; Regs used in _CaptureKey: [wreg-fsr0h+status,2+status,0]
   208  0385  3004               	movlw	4
   209  0386  1283               	bcf	3,5	;RP0=0, select bank0
   210  0387  0086               	movwf	6	;volatile
   211                           
   212                           ;newmain.c: 21: switch(PORTB & 0xF0){
   213  0388  2B91               	goto	l733
   214  0389                     l715:	
   215                           ;newmain.c: 22: case 0x10:
   216                           
   217                           
   218                           ;newmain.c: 24: return 0x01;
   219  0389  3001               	movlw	1
   220  038A  0008               	return
   221  038B                     l719:	
   222                           ;newmain.c: 25: case 0x20:
   223                           
   224                           
   225                           ;newmain.c: 27: return 0x04;
   226  038B  3004               	movlw	4
   227  038C  0008               	return
   228  038D                     l723:	
   229                           ;newmain.c: 28: case 0x40:
   230                           
   231                           
   232                           ;newmain.c: 30: return 0x07;
   233  038D  3007               	movlw	7
   234  038E  0008               	return
   235  038F                     l727:	
   236                           ;newmain.c: 31: case 0x80:
   237                           
   238                           
   239                           ;newmain.c: 33: return 0x00;
   240  038F  3000               	movlw	0
   241  0390  0008               	return
   242  0391                     l733:	
   243                           ;newmain.c: 34: }
   244                           
   245  0391  0806               	movf	6,w	;volatile
   246  0392  39F0               	andlw	240
   247  0393  008C               	movwf	??_CaptureKey
   248  0394  018D               	clrf	??_CaptureKey+1
   249                           
   250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   251                           ; Switch size 1, requested type "space"
   252                           ; Number of cases is 1, Range of values is 0 to 0
   253                           ; switch strategies available:
   254                           ; Name         Instructions Cycles
   255                           ; simple_byte            4     3 (average)
   256                           ; direct_byte            7     6 (fixed)
   257                           ; jumptable            260     6 (fixed)
   258                           ;	Chosen strategy is simple_byte
   259  0395  080D               	movf	??_CaptureKey+1,w
   260  0396  3A00               	xorlw	0	; case 0
   261  0397  1903               	skipnz
   262  0398  2B9A               	goto	l905
   263  0399  2BA8               	goto	l735
   264  039A                     l905:	
   265                           
   266                           ; Switch size 1, requested type "space"
   267                           ; Number of cases is 4, Range of values is 16 to 128
   268                           ; switch strategies available:
   269                           ; Name         Instructions Cycles
   270                           ; simple_byte           13     7 (average)
   271                           ; direct_byte          122     9 (fixed)
   272                           ; jumptable            263     9 (fixed)
   273                           ;	Chosen strategy is simple_byte
   274  039A  080C               	movf	??_CaptureKey,w
   275  039B  3A10               	xorlw	16	; case 16
   276  039C  1903               	skipnz
   277  039D  2B89               	goto	l715
   278  039E  3A30               	xorlw	48	; case 32
   279  039F  1903               	skipnz
   280  03A0  2B8B               	goto	l719
   281  03A1  3A60               	xorlw	96	; case 64
   282  03A2  1903               	skipnz
   283  03A3  2B8D               	goto	l723
   284  03A4  3AC0               	xorlw	192	; case 128
   285  03A5  1903               	skipnz
   286  03A6  2B8F               	goto	l727
   287  03A7  2BA8               	goto	l735
   288  03A8                     l735:	
   289                           
   290                           ;newmain.c: 35: PORTB = 0x02;
   291  03A8  3002               	movlw	2
   292  03A9  0086               	movwf	6	;volatile
   293                           
   294                           ;newmain.c: 36: switch(PORTB & 0xF0){
   295  03AA  2BBB               	goto	l755
   296  03AB                     l20:	
   297                           ;newmain.c: 38: while((PORTB & 0x10) == 0x10);
   298                           
   299                           ;newmain.c: 37: case 0x10:
   300                           
   301  03AB  1A06               	btfsc	6,4	;volatile
   302  03AC  2BAB               	goto	l20
   303                           
   304                           ;newmain.c: 39: return 2;
   305  03AD  3002               	movlw	2
   306  03AE  0008               	return
   307  03AF                     l24:	
   308                           ;newmain.c: 41: while((PORTB & 0x20) == 0x20);
   309                           
   310                           ;newmain.c: 40: case 0x20:
   311                           
   312  03AF  1A86               	btfsc	6,5	;volatile
   313  03B0  2BAF               	goto	l24
   314                           
   315                           ;newmain.c: 42: return 5;
   316  03B1  3005               	movlw	5
   317  03B2  0008               	return
   318  03B3                     l28:	
   319                           ;newmain.c: 44: while((PORTB & 0x40) == 0x40);
   320                           
   321                           ;newmain.c: 43: case 0x40:
   322                           
   323  03B3  1B06               	btfsc	6,6	;volatile
   324  03B4  2BB3               	goto	l28
   325                           
   326                           ;newmain.c: 45: return 8;
   327  03B5  3008               	movlw	8
   328  03B6  0008               	return
   329  03B7                     l32:	
   330                           ;newmain.c: 47: while((PORTB & 0x80) == 0x80);
   331                           
   332                           ;newmain.c: 46: case 0x80:
   333                           
   334  03B7  1B86               	btfsc	6,7	;volatile
   335  03B8  2BB7               	goto	l32
   336                           
   337                           ;newmain.c: 48: return 0;
   338  03B9  3000               	movlw	0
   339  03BA  0008               	return
   340  03BB                     l755:	
   341                           ;newmain.c: 49: }
   342                           
   343  03BB  0806               	movf	6,w	;volatile
   344  03BC  39F0               	andlw	240
   345  03BD  008C               	movwf	??_CaptureKey
   346  03BE  018D               	clrf	??_CaptureKey+1
   347                           
   348                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   349                           ; Switch size 1, requested type "space"
   350                           ; Number of cases is 1, Range of values is 0 to 0
   351                           ; switch strategies available:
   352                           ; Name         Instructions Cycles
   353                           ; simple_byte            4     3 (average)
   354                           ; direct_byte            7     6 (fixed)
   355                           ; jumptable            260     6 (fixed)
   356                           ;	Chosen strategy is simple_byte
   357  03BF  080D               	movf	??_CaptureKey+1,w
   358  03C0  3A00               	xorlw	0	; case 0
   359  03C1  1903               	skipnz
   360  03C2  2BC4               	goto	l907
   361  03C3  2BD2               	goto	l757
   362  03C4                     l907:	
   363                           
   364                           ; Switch size 1, requested type "space"
   365                           ; Number of cases is 4, Range of values is 16 to 128
   366                           ; switch strategies available:
   367                           ; Name         Instructions Cycles
   368                           ; simple_byte           13     7 (average)
   369                           ; direct_byte          122     9 (fixed)
   370                           ; jumptable            263     9 (fixed)
   371                           ;	Chosen strategy is simple_byte
   372  03C4  080C               	movf	??_CaptureKey,w
   373  03C5  3A10               	xorlw	16	; case 16
   374  03C6  1903               	skipnz
   375  03C7  2BAB               	goto	l20
   376  03C8  3A30               	xorlw	48	; case 32
   377  03C9  1903               	skipnz
   378  03CA  2BAF               	goto	l24
   379  03CB  3A60               	xorlw	96	; case 64
   380  03CC  1903               	skipnz
   381  03CD  2BB3               	goto	l28
   382  03CE  3AC0               	xorlw	192	; case 128
   383  03CF  1903               	skipnz
   384  03D0  2BB7               	goto	l32
   385  03D1  2BD2               	goto	l757
   386  03D2                     l757:	
   387                           
   388                           ;newmain.c: 50: PORTB = 0x01;
   389  03D2  3001               	movlw	1
   390  03D3  0086               	movwf	6	;volatile
   391                           
   392                           ;newmain.c: 51: switch(PORTB & 0xF0){
   393  03D4  2BE5               	goto	l777
   394  03D5                     l38:	
   395                           ;newmain.c: 53: while((PORTB & 0x10) == 0x10);
   396                           
   397                           ;newmain.c: 52: case 0x10:
   398                           
   399  03D5  1A06               	btfsc	6,4	;volatile
   400  03D6  2BD5               	goto	l38
   401                           
   402                           ;newmain.c: 54: return 3;
   403  03D7  3003               	movlw	3
   404  03D8  0008               	return
   405  03D9                     l42:	
   406                           ;newmain.c: 56: while((PORTB & 0x20) == 0x20);
   407                           
   408                           ;newmain.c: 55: case 0x20:
   409                           
   410  03D9  1A86               	btfsc	6,5	;volatile
   411  03DA  2BD9               	goto	l42
   412                           
   413                           ;newmain.c: 57: return 6;
   414  03DB  3006               	movlw	6
   415  03DC  0008               	return
   416  03DD                     l46:	
   417                           ;newmain.c: 59: while((PORTB & 0x40) == 0x40);
   418                           
   419                           ;newmain.c: 58: case 0x40:
   420                           
   421  03DD  1B06               	btfsc	6,6	;volatile
   422  03DE  2BDD               	goto	l46
   423                           
   424                           ;newmain.c: 60: return 9;
   425  03DF  3009               	movlw	9
   426  03E0  0008               	return
   427  03E1                     l50:	
   428                           ;newmain.c: 62: while((PORTB & 0x80) == 0x80);
   429                           
   430                           ;newmain.c: 61: case 0x80:
   431                           
   432  03E1  1B86               	btfsc	6,7	;volatile
   433  03E2  2BE1               	goto	l50
   434                           
   435                           ;newmain.c: 63: return 0;
   436  03E3  3000               	movlw	0
   437  03E4  0008               	return
   438  03E5                     l777:	
   439                           ;newmain.c: 64: }
   440                           
   441  03E5  0806               	movf	6,w	;volatile
   442  03E6  39F0               	andlw	240
   443  03E7  008C               	movwf	??_CaptureKey
   444  03E8  018D               	clrf	??_CaptureKey+1
   445                           
   446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   447                           ; Switch size 1, requested type "space"
   448                           ; Number of cases is 1, Range of values is 0 to 0
   449                           ; switch strategies available:
   450                           ; Name         Instructions Cycles
   451                           ; simple_byte            4     3 (average)
   452                           ; direct_byte            7     6 (fixed)
   453                           ; jumptable            260     6 (fixed)
   454                           ;	Chosen strategy is simple_byte
   455  03E9  080D               	movf	??_CaptureKey+1,w
   456  03EA  3A00               	xorlw	0	; case 0
   457  03EB  1903               	skipnz
   458  03EC  2BEE               	goto	l909
   459  03ED  2BFC               	goto	l779
   460  03EE                     l909:	
   461                           
   462                           ; Switch size 1, requested type "space"
   463                           ; Number of cases is 4, Range of values is 16 to 128
   464                           ; switch strategies available:
   465                           ; Name         Instructions Cycles
   466                           ; simple_byte           13     7 (average)
   467                           ; direct_byte          122     9 (fixed)
   468                           ; jumptable            263     9 (fixed)
   469                           ;	Chosen strategy is simple_byte
   470  03EE  080C               	movf	??_CaptureKey,w
   471  03EF  3A10               	xorlw	16	; case 16
   472  03F0  1903               	skipnz
   473  03F1  2BD5               	goto	l38
   474  03F2  3A30               	xorlw	48	; case 32
   475  03F3  1903               	skipnz
   476  03F4  2BD9               	goto	l42
   477  03F5  3A60               	xorlw	96	; case 64
   478  03F6  1903               	skipnz
   479  03F7  2BDD               	goto	l46
   480  03F8  3AC0               	xorlw	192	; case 128
   481  03F9  1903               	skipnz
   482  03FA  2BE1               	goto	l50
   483  03FB  2BFC               	goto	l779
   484  03FC                     l779:	
   485                           
   486                           ;newmain.c: 65: return 0xAA;
   487  03FC  30AA               	movlw	170
   488  03FD  0008               	return
   489  03FE                     __end_of_CaptureKey:	
   490  004E                     btemp	set	78	;btemp
   491  004E                     wtemp	set	78
   492  004E                     wtemp0	set	78
   493  0050                     wtemp1	set	80
   494  0052                     wtemp2	set	82
   495  0054                     wtemp3	set	84
   496  0056                     wtemp4	set	86
   497  0058                     wtemp5	set	88
   498  004F                     wtemp6	set	79
   499  004E                     ttemp	set	78
   500  004E                     ttemp0	set	78
   501  0051                     ttemp1	set	81
   502  0054                     ttemp2	set	84
   503  0057                     ttemp3	set	87
   504  004F                     ttemp4	set	79
   505  004E                     ltemp	set	78
   506  004E                     ltemp0	set	78
   507  0052                     ltemp1	set	82
   508  0056                     ltemp2	set	86
   509  0050                     ltemp3	set	80


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            66      5       5

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CaptureKey

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     136
                                              2 BANK0      3     3      0
                         _CaptureKey
 ---------------------------------------------------------------------------------
 (1) _CaptureKey                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CaptureKey

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               42      5       5       3        7.6%
ABS                  0      0       0       4        0.0%
BITBANK0            42      0       0       5        0.0%
DATA                 0      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Dec 05 17:25:07 2016

                     l20 03AB                       l32 03B7                       l24 03AF  
                     l50 03E1                       l42 03D9                       l28 03B3  
                     l46 03DD                       l38 03D5                       l57 037A  
                    l723 038D                      l715 0389                      l733 0391  
                    l735 03A8                      l727 038F                      l719 038B  
                    l807 036D                      l905 039A                      l907 03C4  
                    l755 03BB                      l909 03EE                      l757 03D2  
                    l777 03E5                      l779 03FC                     _main 0363  
                   btemp 004E                     ltemp 004E                     start 0000  
                   ttemp 004E                     wtemp 004E               _CaptureKey 0385  
                  ?_main 000C                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    ltemp0 004E  
                  ltemp1 0052                    ltemp2 0056                    ltemp3 0050  
                  ttemp0 004E                    ttemp1 0051                    ttemp2 0054  
                  ttemp3 0057                    ttemp4 004F                    status 0003  
                  wtemp0 004E                    wtemp1 0050                    wtemp2 0052  
                  wtemp3 0054                    wtemp4 0056                    wtemp5 0058  
                  wtemp6 004F          __initialization 03FE             __end_of_main 0385  
                 ??_main 000E              ?_CaptureKey 000C  __end_of__initialization 03FE  
    __size_of_CaptureKey 0079               __pmaintext 0363                  __ptext1 0385  
   end_of_initialization 03FE             ??_CaptureKey 000C       __end_of_CaptureKey 03FE  
    start_initialization 03FE                ___latbits 0000            __pcstackBANK0 000C  
              main@porta 0010            __size_of_main 0022                 main@temp 000F  
